"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ai/profile/page",{

/***/ "(app-pages-browser)/./src/hooks/useConversations.tsx":
/*!****************************************!*\
  !*** ./src/hooks/useConversations.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ useConversations; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n// interface Conversation { \n//   id: number;\n//   participants: User[];\n//   messages: string[]\n// }\nfunction useConversations(session) {\n    _s();\n    const [conversations, setConversations] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        async function fetchConversations() {\n            var _session_user;\n            if (!(session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id)) return;\n            setLoading(true);\n            const cache = sessionStorage.getItem(\"conversations\");\n            const timestamp = localStorage.getItem(\"conversations_timestamp\");\n            const now = Date.now();\n            const cacheDuration = 5 * 60 * 1000; // Cache duration in milliseconds\n            try {\n                setLoading(true);\n                const response = await fetch(\"/api/userConversations?userId=\".concat(session.user.id));\n                if (!response.ok) throw new Error(\"Failed to fetch conversations\");\n                const fetchedConversations = await response.json();\n                setConversations(fetchedConversations);\n                sessionStorage.setItem(\"conversations\", JSON.stringify(fetchedConversations));\n                localStorage.setItem(\"conversations_timestamp\", now.toString());\n            } catch (error) {\n                console.error(\"Error fetching conversations:\", error);\n            } finally{\n                setLoading(false);\n            }\n        }\n        fetchConversations();\n    }, [\n        session\n    ]);\n    return {\n        conversations,\n        isLoading,\n        setConversations\n    };\n}\n_s(useConversations, \"s5AOqCSffGaEgQMqM80kKFybpgM=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VDb252ZXJzYXRpb25zLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBVzVDLDRCQUE0QjtBQUM1QixnQkFBZ0I7QUFDaEIsMEJBQTBCO0FBQzFCLHVCQUF1QjtBQUN2QixJQUFJO0FBRVcsU0FBU0UsaUJBQWlCQyxPQUFZOztJQUNuRCxNQUFNLENBQUNDLGVBQWVDLGlCQUFpQixHQUFHSiwrQ0FBUUEsQ0FBaUIsRUFBRTtJQUNuRSxNQUFNLENBQUNLLFdBQVdDLFdBQVcsR0FBR04sK0NBQVFBLENBQUM7SUFHekNELGdEQUFTQSxDQUFDO1FBQ04sZUFBZVE7Z0JBQ05MO1lBQUwsSUFBSSxFQUFDQSxvQkFBQUEsK0JBQUFBLGdCQUFBQSxRQUFTTSxJQUFJLGNBQWJOLG9DQUFBQSxjQUFlTyxFQUFFLEdBQUU7WUFDeEJILFdBQVc7WUFFWCxNQUFNSSxRQUFRQyxlQUFlQyxPQUFPLENBQUM7WUFDckMsTUFBTUMsWUFBWUMsYUFBYUYsT0FBTyxDQUFDO1lBQ3ZDLE1BQU1HLE1BQU1DLEtBQUtELEdBQUc7WUFDcEIsTUFBTUUsZ0JBQWdCLElBQUksS0FBSyxNQUFNLGlDQUFpQztZQUtsRSxJQUFJO2dCQUNGWCxXQUFXO2dCQUNYLE1BQU1ZLFdBQVcsTUFBTUMsTUFDckIsaUNBQWlELE9BQWhCakIsUUFBUU0sSUFBSSxDQUFDQyxFQUFFO2dCQUVsRCxJQUFJLENBQUNTLFNBQVNFLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07Z0JBRWxDLE1BQU1DLHVCQUF1QixNQUFNSixTQUFTSyxJQUFJO2dCQUdoRG5CLGlCQUFpQmtCO2dCQUNqQlgsZUFBZWEsT0FBTyxDQUNwQixpQkFDQUMsS0FBS0MsU0FBUyxDQUFDSjtnQkFFakJSLGFBQWFVLE9BQU8sQ0FBQywyQkFBMkJULElBQUlZLFFBQVE7WUFDOUQsRUFBRSxPQUFPQyxPQUFPO2dCQUNkQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtZQUNqRCxTQUFVO2dCQUNSdEIsV0FBVztZQUNiO1FBQ0o7UUFFQUM7SUFDRixHQUFHO1FBQUNMO0tBQVE7SUFFbEIsT0FBTztRQUFFQztRQUFlRTtRQUFXRDtJQUFpQjtBQUN4RDtHQTdDd0JIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9ob29rcy91c2VDb252ZXJzYXRpb25zLnRzeD80N2YxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFNlc3Npb24gfSBmcm9tIFwibmV4dC1hdXRoXCI7XG5pbXBvcnQgeyBDb252ZXJzYXRpb24gfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmludGVyZmFjZSBVc2VyIHtcbiAgaWQ6IG51bWJlcjsgXG4gIG5hbWU/OiBzdHJpbmcgfCBudWxsO1xuICBlbWFpbD86IHN0cmluZyB8IG51bGw7XG4gIGltYWdlPzogc3RyaW5nIHwgbnVsbDtcbiAgLy8gQWRkIG90aGVyIHVzZXIgcHJvcGVydGllcyBpZiBuZWVkZWRcbn1cblxuLy8gaW50ZXJmYWNlIENvbnZlcnNhdGlvbiB7IFxuLy8gICBpZDogbnVtYmVyO1xuLy8gICBwYXJ0aWNpcGFudHM6IFVzZXJbXTtcbi8vICAgbWVzc2FnZXM6IHN0cmluZ1tdXG4vLyB9XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUNvbnZlcnNhdGlvbnMoc2Vzc2lvbjogYW55KSB7XG4gIGNvbnN0IFtjb252ZXJzYXRpb25zLCBzZXRDb252ZXJzYXRpb25zXSA9IHVzZVN0YXRlPENvbnZlcnNhdGlvbltdPihbXSk7XG4gICAgY29uc3QgW2lzTG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG5cblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFzeW5jIGZ1bmN0aW9uIGZldGNoQ29udmVyc2F0aW9ucygpIHtcbiAgICAgICAgICAgIGlmICghc2Vzc2lvbj8udXNlcj8uaWQpIHJldHVybjtcbiAgICAgICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG5cbiAgICAgICAgICAgIGNvbnN0IGNhY2hlID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShcImNvbnZlcnNhdGlvbnNcIik7XG4gICAgICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNvbnZlcnNhdGlvbnNfdGltZXN0YW1wXCIpO1xuICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIGNvbnN0IGNhY2hlRHVyYXRpb24gPSA1ICogNjAgKiAxMDAwOyAvLyBDYWNoZSBkdXJhdGlvbiBpbiBtaWxsaXNlY29uZHNcbiAgICAgIFxuXG5cbiAgIFxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgICAgICAgICAgICAgYC9hcGkvdXNlckNvbnZlcnNhdGlvbnM/dXNlcklkPSR7c2Vzc2lvbi51c2VyLmlkfWBcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggY29udmVyc2F0aW9uc1wiKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICBjb25zdCBmZXRjaGVkQ29udmVyc2F0aW9ucyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuXG4gICAgICAgICAgICAgICAgICBzZXRDb252ZXJzYXRpb25zKGZldGNoZWRDb252ZXJzYXRpb25zKTtcbiAgICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXG4gICAgICAgICAgICAgICAgICAgIFwiY29udmVyc2F0aW9uc1wiLFxuICAgICAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeShmZXRjaGVkQ29udmVyc2F0aW9ucylcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImNvbnZlcnNhdGlvbnNfdGltZXN0YW1wXCIsIG5vdy50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGNvbnZlcnNhdGlvbnM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGZldGNoQ29udmVyc2F0aW9ucygpO1xuICAgICAgICAgIH0sIFtzZXNzaW9uXSk7XG5cbiAgICByZXR1cm4geyBjb252ZXJzYXRpb25zLCBpc0xvYWRpbmcsIHNldENvbnZlcnNhdGlvbnMgfTtcbn1cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVzZUNvbnZlcnNhdGlvbnMiLCJzZXNzaW9uIiwiY29udmVyc2F0aW9ucyIsInNldENvbnZlcnNhdGlvbnMiLCJpc0xvYWRpbmciLCJzZXRMb2FkaW5nIiwiZmV0Y2hDb252ZXJzYXRpb25zIiwidXNlciIsImlkIiwiY2FjaGUiLCJzZXNzaW9uU3RvcmFnZSIsImdldEl0ZW0iLCJ0aW1lc3RhbXAiLCJsb2NhbFN0b3JhZ2UiLCJub3ciLCJEYXRlIiwiY2FjaGVEdXJhdGlvbiIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsIkVycm9yIiwiZmV0Y2hlZENvbnZlcnNhdGlvbnMiLCJqc29uIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b1N0cmluZyIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useConversations.tsx\n"));

/***/ })

});