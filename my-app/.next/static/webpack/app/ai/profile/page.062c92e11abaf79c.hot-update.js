"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ai/profile/page",{

/***/ "(app-pages-browser)/./src/app/ai/profile/page.tsx":
/*!*************************************!*\
  !*** ./src/app/ai/profile/page.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Profile; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utilis_isClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utilis/isClient */ \"(app-pages-browser)/./src/utilis/isClient.ts\");\n/* harmony import */ var _hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/hooks/useSessionStorage */ \"(app-pages-browser)/./src/hooks/useSessionStorage.ts\");\n/* harmony import */ var _utilis_CheckSession__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/utilis/CheckSession */ \"(app-pages-browser)/./src/utilis/CheckSession.ts\");\n/* harmony import */ var _hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/hooks/ConversationContext */ \"(app-pages-browser)/./src/hooks/ConversationContext.tsx\");\n/* harmony import */ var _hooks_createConversation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/hooks/createConversation */ \"(app-pages-browser)/./src/hooks/createConversation.ts\");\n/* harmony import */ var _hooks_useConversations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/hooks/useConversations */ \"(app-pages-browser)/./src/hooks/useConversations.tsx\");\n/* harmony import */ var _chat_ChatContainer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../chat/ChatContainer */ \"(app-pages-browser)/./src/app/ai/chat/ChatContainer.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n//Utilis and helper functions\n\n\n\n// import { Header } from \"@/app/components/Header\";\n// Dashboard\n\n\n\n//Chat Container\n\n// import FloatingScrollButton from \"@/app/components/ScrollToBottomButton\";\n// import OpenChatContainer from \"@/app/components/helper/openChatContainerComponent\";\n// import { useSessionGate } from \"@/app/profile/_middlewhere\";\n// import LoadingComponent from \"@/app/components/helper/Loading\";\nfunction Profile() {\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const formRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    //Should wrap these in a bigger function since being used multiple times?\n    const [sessionStatus, setSessionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [showGuidelines, setShowGuidelines] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    //List of  PDF imagse\n    const { userName, setUserName, splitUserName, email, setEmail, setSplitUserName } = (0,_hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_5__.useSessionStorage)();\n    const { responses, setResponses, message, setMessage } = (0,_hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_7__.useChatConversation)();\n    let localStorageConvoId;\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (localStorage.getItem(\"currentConversationId\")) {\n            localStorageConvoId = localStorage.getItem(\"currentConversationId\");\n            setCurrentConversationId(localStorageConvoId);\n        }\n    }, []);\n    const { data: session, status } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession)();\n    const [messagesIsLoading, setMessagesIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isReponseLoading, setResponseLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    //Set the conversation\n    const [currentConversationId, setCurrentConversationId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    // const [newTitle, setNewTitle] = useState(\"\");\n    const { conversations, isLoading, setConversations } = (0,_hooks_useConversations__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(session);\n    //Creating a new Conversation.\n    const { createConversation, newTitle, setNewTitle, isCreateLoading, error } = (0,_hooks_createConversation__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(session, setConversations, setCurrentConversationId);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        (0,_utilis_CheckSession__WEBPACK_IMPORTED_MODULE_6__.checkSession)(status, {\n            setUserId,\n            setUserName,\n            setSessionStatus,\n            setEmail,\n            setSplitUserName,\n            isClient: _utilis_isClient__WEBPACK_IMPORTED_MODULE_4__.isClient,\n            session,\n            router,\n            email,\n            userName,\n            splitUserName\n        });\n    }, [\n        status\n    ]);\n    //This funcitno shifts and shows the mobile Chat ccontainer\n    const chatContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [isAtZero, setIsAtZero] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // State to track the position\n    const handleMobileChatBtnClick = ()=>{\n        if (chatContainerRef.current) {\n            if (isAtZero) {\n                chatContainerRef.current.style.transform = \"translateX(-100%)\";\n            } else {\n                chatContainerRef.current.style.transform = \"translateX(0px)\";\n            }\n            setIsAtZero(!isAtZero); // Toggle the state\n        }\n    };\n    // Effect to handle viewport resize\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const handleResize = ()=>{\n            if (window.innerWidth >= 950 && chatContainerRef.current) {\n                chatContainerRef.current.style.transform = \"translateX(0px)\";\n                setIsAtZero(false); // Reset the state\n            } else if (chatContainerRef.current) {\n                chatContainerRef.current.style.transform = \"translateX(-100%)\";\n                setIsAtZero(true); // Reset the state\n            }\n        };\n        window.addEventListener(\"resize\", handleResize);\n        // Cleanup event listener on component unmount\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (userName !== null) {\n            sessionStorage.setItem(\"userName\", userName);\n        }\n        if (splitUserName !== \"\") {\n            sessionStorage.setItem(\"splitUserName\", splitUserName);\n        }\n    }, [\n        userName,\n        splitUserName\n    ]);\n    const [editTitleId, setEditTitleId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [editedTitle, setEditedTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [editingTitle, setEditingTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [titleUpdated, setTitleUpdated] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // New state for title updates\n    //Editing the ability to change the existing title.\n    const handleTitleClick = (convoId)=>{\n        const conversation = conversations.find((convo)=>convo.conversationId === convoId);\n        if (conversation) {\n            setEditTitleId(conversation.conversationId);\n            setEditedTitle(conversation.title);\n            setEditingTitle(true);\n        } else {\n        // console.log(`Conversation with ID ${convoId} not found`);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        editTitleId,\n        editedTitle\n    ]);\n    const handleTitleChange = (event)=>{\n        setEditedTitle(event.target.value);\n    };\n    async function getConversation(conversationId) {\n        try {\n            const response = await fetch(\"/api/\".concat(conversationId));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch conversation\");\n            }\n            const updatedConversation = await response.json();\n            // console.log(\n            //   \"Logging the converations before errorw\",\n            //   updatedConversation\n            // );\n            // Update local state\n            setConversations((prevConversations)=>{\n                return prevConversations.map((convo)=>convo === conversationId ? {\n                        ...convo,\n                        title: updatedConversation.title\n                    } : convo);\n            });\n            updateLocalStorage(updatedConversation, conversationId);\n        } catch (error) {\n            console.error(\"Error fetching conversation:\", error);\n            throw error; // Re-throw to handle it in the UI layer\n        }\n    }\n    async function deleteConversation(conversationId) {\n        const currentConversations = conversations;\n        console.log(\"Conversation ID\", conversationId);\n        // Optimistically remove the conversation from UI\n        const updatedConversations = currentConversations.filter((convo)=>convo.conversationId !== conversationId);\n        setConversations(updatedConversations);\n        sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n        try {\n            const response = await fetch(\"/api/deleteConversations/\", {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    id: conversationId\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to delete the conversation\");\n            }\n            // Filter out the deleted conversation\n            const updatedConversations = conversations.filter((convo)=>convo.converatoinID !== conversationId);\n            // console.log(\"Logging out the Conversation Filter\", conversations);\n            // Update state and local storage\n            setConversations(updatedConversations); // Update React state\n            sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations)); // Update local storage\n            if (response.ok) {\n                // Update the conversations state\n                const updatedConversations = conversations.filter((convo)=>convo.conversationId !== conversationId);\n                setConversations(updatedConversations);\n                // Update the session storage\n                sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n                router.push(\"/ai/chat\");\n            }\n        } catch (error) {\n            console.error(\"Error deleting conversation:\", error);\n            alert(\"Could not delete the conversation. Please try again.\");\n        }\n    }\n    function updateLocalStorage(updatedConversation, conversationId) {\n        let cachedConversations = sessionStorage.getItem(\"conversations\");\n        if (cachedConversations) {\n            try {\n                // Parse the cached conversations\n                const parsedConversations = JSON.parse(cachedConversations);\n                // Ensure that parsedConversations is an array\n                if (Array.isArray(parsedConversations)) {\n                    const updatedCache = parsedConversations.map((convo)=>convo.conversationId === conversationId ? {\n                            ...convo,\n                            title: updatedConversation.title\n                        } : convo);\n                    sessionStorage.setItem(\"conversations\", JSON.stringify(updatedCache));\n                } else {\n                    console.error(\"Parsed cached conversations is not an array\");\n                }\n            } catch (e) {\n                console.error(\"Error parsing cached conversations:\", e);\n            }\n        }\n    }\n    const handleSubmitTitle = async (event)=>{\n        event.preventDefault(); // Prevent form submission\n        let titleChange = \"\";\n        console.log(\"Event Key\", event.key);\n        if (event.key === \"Enter\") {\n            event.preventDefault(); // Prevent form submission\n            const newTitle = editedTitle; // Capture the title at the time of submission\n            titleChange = editTitleId !== null && editTitleId !== void 0 ? editTitleId : \"\";\n            // console.log(\"New title to be set:\", newTitle);\n            // console.log(\"New title Id being logged\", editTitleId);\n            if (editTitleId !== null && editTitleId !== \"\") {\n                const updatedConversations = conversations.map((convo)=>convo.conversationId === editTitleId ? {\n                        ...convo,\n                        title: newTitle\n                    } : convo);\n                setConversations(updatedConversations);\n                // console.log(\"Updated conversations:\", updatedConversations);\n                sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n                setEditTitleId(null); // Exit edit mode\n                setEditedTitle(\"\"); // Clear the edited title state\n                setEditingTitle(false);\n            }\n        }\n        const localConversationId = localStorage.getItem(\"currentConversationId\");\n        console.log(\"Local Conversation ID\", localConversationId);\n        try {\n            const response = await fetch(\"/api/submitTitle/\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    title: editedTitle,\n                    id: localConversationId\n                })\n            });\n            // console.log(\"Are you sending the new Title\", editedTitle);\n            if (response.ok) {\n                // await getConversation(editTitleId);\n                setEditingTitle(false);\n                setTitleUpdated((prev)=>!prev); // Toggle the titleUpdated state\n            }\n            if (!response.ok) {\n                throw new Error(\"Failed to update title\");\n            }\n        } catch (error) {\n            console.error(\"Error updating title:\", error);\n            // If the update fails, revert the change in the UI and alert the user\n            const originalConversations = conversations.map((convo)=>convo.conversationId === editTitleId ? {\n                    ...convo,\n                    title: convo.title\n                } : convo);\n            setConversations(originalConversations);\n            sessionStorage.setItem(\"conversations\", JSON.stringify(originalConversations));\n            alert(\"Failed to update title, please try again.\"); // Inform the user\n        }\n    };\n    const chatDashBoardRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [selectedFile, setselectedFile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const handleConversationClick = (convoId)=>{\n        const targetPath = \"/ai/chat/\".concat(session === null || session === void 0 ? void 0 : session.user.id, \"/\").concat(convoId);\n        router.push(targetPath, undefined);\n        //Store the Current converatoinID in local to persit on chaning the navigation\n        let localStorageConvoId;\n        localStorage.setItem(\"currentConversationId\", convoId);\n        // console.log(\n        //   \"Logging the current conversation ID\",\n        //   localStorage.getItem(\"currentConversationId\")\n        // );\n        localStorageConvoId = localStorage.getItem(\"currentConversationId\");\n        setCurrentConversationId(convoId);\n    };\n    //Get the full Message Conversation.\n    const clearStorage = ()=>{\n        sessionStorage.removeItem(\"initialMessage\");\n    };\n    //Another Hook Check for the local storage\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (currentConversationId) {\n        // handleConversationClick(currentConversationId as string);\n        }\n        clearStorage();\n    }, [\n        currentConversationId\n    ]); // Dependency array includes state that triggers this effect\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        isLoading\n    ]);\n    //Fetch Message for this converations\n    const messagesRefCounter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        messagesRefCounter\n    ]);\n    if (!conversations) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            children: \"No conversation found.\"\n        }, void 0, false, {\n            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n            lineNumber: 430,\n            columnNumber: 12\n        }, this);\n    }\n    const [chatContainerShown, setChatContainerShown] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        console.log(\"Responses\", selectedFile);\n    }, [\n        selectedFile\n    ]);\n    //Function takes you to the bottom of the div by clicking the floating button.\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"chatDashboard text-white\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chat_ChatContainer__WEBPACK_IMPORTED_MODULE_10__.ChatContainer, {\n                setConversations: setConversations,\n                conversations: conversations,\n                currentConversationId: currentConversationId,\n                splitUserName: splitUserName,\n                userName: userName || \"\",\n                email: email || \"\",\n                onConversationClick: handleConversationClick,\n                onDeleteConvo: deleteConversation,\n                onChangeConvoTitle: handleSubmitTitle,\n                handleTitleClick: handleTitleClick,\n                editTitleId: editTitleId,\n                editedTitle: editedTitle,\n                handleTitleChange: handleTitleChange,\n                editingTitle: editingTitle,\n                titleUpdated: titleUpdated,\n                chatContainerRef: chatContainerRef,\n                handleMobileChatBtnClick: handleMobileChatBtnClick\n            }, void 0, false, {\n                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n                lineNumber: 446,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chatDashBoardRef,\n                className: \"chatDashboardWrapper w-full text-left\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"chatDashBoardContainer \"\n                }, void 0, false, {\n                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n                    lineNumber: 474,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n                lineNumber: 468,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n        lineNumber: 443,\n        columnNumber: 5\n    }, this);\n}\n_s(Profile, \"iVyCytlr6Nbo4qmsNZkdZZ9PUjQ=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter,\n        _hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_5__.useSessionStorage,\n        _hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_7__.useChatConversation,\n        next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession,\n        _hooks_useConversations__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n        _hooks_createConversation__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n    ];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ai/profile/page.tsx\n"));

/***/ })

});