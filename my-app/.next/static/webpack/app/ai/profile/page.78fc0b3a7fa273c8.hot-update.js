"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ai/profile/page",{

/***/ "(app-pages-browser)/./src/app/ai/profile/page.tsx":
/*!*************************************!*\
  !*** ./src/app/ai/profile/page.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Profile; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _utilis_isClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utilis/isClient */ \"(app-pages-browser)/./src/utilis/isClient.ts\");\n/* harmony import */ var _hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/hooks/useSessionStorage */ \"(app-pages-browser)/./src/hooks/useSessionStorage.ts\");\n/* harmony import */ var _utilis_CheckSession__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/utilis/CheckSession */ \"(app-pages-browser)/./src/utilis/CheckSession.ts\");\n/* harmony import */ var _hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/hooks/ConversationContext */ \"(app-pages-browser)/./src/hooks/ConversationContext.tsx\");\n/* harmony import */ var _hooks_createConversation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/hooks/createConversation */ \"(app-pages-browser)/./src/hooks/createConversation.ts\");\n/* harmony import */ var _hooks_useConversations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/hooks/useConversations */ \"(app-pages-browser)/./src/hooks/useConversations.tsx\");\n/* harmony import */ var _chat_ChatContainer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../chat/ChatContainer */ \"(app-pages-browser)/./src/app/ai/chat/ChatContainer.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n//Utilis and helper functions\n\n\n\n// import { Header } from \"@/app/components/Header\";\n// Dashboard\n\n\n\n//Chat Container\n\n// import FloatingScrollButton from \"@/app/components/ScrollToBottomButton\";\n// import OpenChatContainer from \"@/app/components/helper/openChatContainerComponent\";\n// import { useSessionGate } from \"@/app/profile/_middlewhere\";\n// import LoadingComponent from \"@/app/components/helper/Loading\";\nfunction Profile() {\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const formRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    //Should wrap these in a bigger function since being used multiple times?\n    const [sessionStatus, setSessionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [showGuidelines, setShowGuidelines] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    //List of  PDF imagse\n    const { userName, setUserName, splitUserName, email, setEmail, setSplitUserName } = (0,_hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_5__.useSessionStorage)();\n    const { responses, setResponses, message, setMessage } = (0,_hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_7__.useChatConversation)();\n    let localStorageConvoId;\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (localStorage.getItem(\"currentConversationId\")) {\n            localStorageConvoId = localStorage.getItem(\"currentConversationId\");\n            setCurrentConversationId(localStorageConvoId);\n        }\n    }, []);\n    const { data: session, status } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession)();\n    const [messagesIsLoading, setMessagesIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isReponseLoading, setResponseLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    //Set the conversation\n    const [currentConversationId, setCurrentConversationId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    // const [newTitle, setNewTitle] = useState(\"\");\n    const { conversations, isLoading, setConversations } = (0,_hooks_useConversations__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(session);\n    //Creating a new Conversation.\n    const { createConversation, newTitle, setNewTitle, isCreateLoading, error } = (0,_hooks_createConversation__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(session, setConversations, setCurrentConversationId);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        (0,_utilis_CheckSession__WEBPACK_IMPORTED_MODULE_6__.checkSession)(status, {\n            setUserId,\n            setUserName,\n            setSessionStatus,\n            setEmail,\n            setSplitUserName,\n            isClient: _utilis_isClient__WEBPACK_IMPORTED_MODULE_4__.isClient,\n            session,\n            router,\n            email,\n            userName,\n            splitUserName\n        });\n    }, [\n        status\n    ]);\n    //This funcitno shifts and shows the mobile Chat ccontainer\n    const chatContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [isAtZero, setIsAtZero] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // State to track the position\n    const handleMobileChatBtnClick = ()=>{\n        if (chatContainerRef.current) {\n            if (isAtZero) {\n                chatContainerRef.current.style.transform = \"translateX(-100%)\";\n            } else {\n                chatContainerRef.current.style.transform = \"translateX(0px)\";\n            }\n            setIsAtZero(!isAtZero); // Toggle the state\n        }\n    };\n    // Effect to handle viewport resize\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const handleResize = ()=>{\n            if (window.innerWidth >= 950 && chatContainerRef.current) {\n                chatContainerRef.current.style.transform = \"translateX(0px)\";\n                setIsAtZero(false); // Reset the state\n            } else if (chatContainerRef.current) {\n                chatContainerRef.current.style.transform = \"translateX(-100%)\";\n                setIsAtZero(true); // Reset the state\n            }\n        };\n        window.addEventListener(\"resize\", handleResize);\n        // Cleanup event listener on component unmount\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (userName !== null) {\n            sessionStorage.setItem(\"userName\", userName);\n        }\n        if (splitUserName !== \"\") {\n            sessionStorage.setItem(\"splitUserName\", splitUserName);\n        }\n    }, [\n        userName,\n        splitUserName\n    ]);\n    const [editTitleId, setEditTitleId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [editedTitle, setEditedTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [editingTitle, setEditingTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [titleUpdated, setTitleUpdated] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // New state for title updates\n    //Editing the ability to change the existing title.\n    const handleTitleClick = (convoId)=>{\n        const conversation = conversations.find((convo)=>convo.conversationId === convoId);\n        if (conversation) {\n            setEditTitleId(conversation.conversationId);\n            setEditedTitle(conversation.title);\n            setEditingTitle(true);\n        } else {\n        // console.log(`Conversation with ID ${convoId} not found`);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        editTitleId,\n        editedTitle\n    ]);\n    const handleTitleChange = (event)=>{\n        setEditedTitle(event.target.value);\n    };\n    async function getConversation(conversationId) {\n        try {\n            const response = await fetch(\"/api/\".concat(conversationId));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch conversation\");\n            }\n            const updatedConversation = await response.json();\n            // console.log(\n            //   \"Logging the converations before errorw\",\n            //   updatedConversation\n            // );\n            // Update local state\n            setConversations((prevConversations)=>{\n                return prevConversations.map((convo)=>convo === conversationId ? {\n                        ...convo,\n                        title: updatedConversation.title\n                    } : convo);\n            });\n            updateLocalStorage(updatedConversation, conversationId);\n        } catch (error) {\n            console.error(\"Error fetching conversation:\", error);\n            throw error; // Re-throw to handle it in the UI layer\n        }\n    }\n    async function deleteConversation(conversationId) {\n        const currentConversations = conversations;\n        console.log(\"Conversation ID\", conversationId);\n        // Optimistically remove the conversation from UI\n        const updatedConversations = currentConversations.filter((convo)=>convo.conversationId !== conversationId);\n        setConversations(updatedConversations);\n        sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n        try {\n            const response = await fetch(\"/api/deleteConversations/\", {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    id: conversationId\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to delete the conversation\");\n            }\n            // Filter out the deleted conversation\n            const updatedConversations = conversations.filter((convo)=>convo.converatoinID !== conversationId);\n            // console.log(\"Logging out the Conversation Filter\", conversations);\n            // Update state and local storage\n            setConversations(updatedConversations); // Update React state\n            sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations)); // Update local storage\n            if (response.ok) {\n                // Update the conversations state\n                const updatedConversations = conversations.filter((convo)=>convo.conversationId !== conversationId);\n                setConversations(updatedConversations);\n                // Update the session storage\n                sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n                router.push(\"/ai/chat\");\n            }\n        } catch (error) {\n            console.error(\"Error deleting conversation:\", error);\n            alert(\"Could not delete the conversation. Please try again.\");\n        }\n    }\n    function updateLocalStorage(updatedConversation, conversationId) {\n        let cachedConversations = sessionStorage.getItem(\"conversations\");\n        if (cachedConversations) {\n            try {\n                // Parse the cached conversations\n                const parsedConversations = JSON.parse(cachedConversations);\n                // Ensure that parsedConversations is an array\n                if (Array.isArray(parsedConversations)) {\n                    const updatedCache = parsedConversations.map((convo)=>convo.conversationId === conversationId ? {\n                            ...convo,\n                            title: updatedConversation.title\n                        } : convo);\n                    sessionStorage.setItem(\"conversations\", JSON.stringify(updatedCache));\n                } else {\n                    console.error(\"Parsed cached conversations is not an array\");\n                }\n            } catch (e) {\n                console.error(\"Error parsing cached conversations:\", e);\n            }\n        }\n    }\n    const handleSubmitTitle = async (event)=>{\n        event.preventDefault(); // Prevent form submission\n        let titleChange = \"\";\n        console.log(\"Event Key\", event.key);\n        if (event.key === \"Enter\") {\n            event.preventDefault(); // Prevent form submission\n            const newTitle = editedTitle; // Capture the title at the time of submission\n            titleChange = editTitleId !== null && editTitleId !== void 0 ? editTitleId : \"\";\n            // console.log(\"New title to be set:\", newTitle);\n            // console.log(\"New title Id being logged\", editTitleId);\n            if (editTitleId !== null && editTitleId !== \"\") {\n                const updatedConversations = conversations.map((convo)=>convo.conversationId === editTitleId ? {\n                        ...convo,\n                        title: newTitle\n                    } : convo);\n                setConversations(updatedConversations);\n                // console.log(\"Updated conversations:\", updatedConversations);\n                sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n                setEditTitleId(null); // Exit edit mode\n                setEditedTitle(\"\"); // Clear the edited title state\n                setEditingTitle(false);\n            }\n        }\n        const localConversationId = localStorage.getItem(\"currentConversationId\");\n        console.log(\"Local Conversation ID\", localConversationId);\n        try {\n            const response = await fetch(\"/api/submitTitle/\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    title: editedTitle,\n                    id: localConversationId\n                })\n            });\n            // console.log(\"Are you sending the new Title\", editedTitle);\n            if (response.ok) {\n                // await getConversation(editTitleId);\n                setEditingTitle(false);\n                setTitleUpdated((prev)=>!prev); // Toggle the titleUpdated state\n            }\n            if (!response.ok) {\n                throw new Error(\"Failed to update title\");\n            }\n        } catch (error) {\n            console.error(\"Error updating title:\", error);\n            // If the update fails, revert the change in the UI and alert the user\n            const originalConversations = conversations.map((convo)=>convo.conversationId === editTitleId ? {\n                    ...convo,\n                    title: convo.title\n                } : convo);\n            setConversations(originalConversations);\n            sessionStorage.setItem(\"conversations\", JSON.stringify(originalConversations));\n            alert(\"Failed to update title, please try again.\"); // Inform the user\n        }\n    };\n    const chatDashBoardRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [selectedFile, setselectedFile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const handleConversationClick = (convoId)=>{\n        const targetPath = \"/ai/chat/\".concat(session === null || session === void 0 ? void 0 : session.user.id, \"/\").concat(convoId);\n        router.push(targetPath, undefined);\n        //Store the Current converatoinID in local to persit on chaning the navigation\n        let localStorageConvoId;\n        localStorage.setItem(\"currentConversationId\", convoId);\n        // console.log(\n        //   \"Logging the current conversation ID\",\n        //   localStorage.getItem(\"currentConversationId\")\n        // );\n        localStorageConvoId = localStorage.getItem(\"currentConversationId\");\n        setCurrentConversationId(convoId);\n    };\n    //Get the full Message Conversation.\n    const clearStorage = ()=>{\n        sessionStorage.removeItem(\"initialMessage\");\n    };\n    //Another Hook Check for the local storage\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (currentConversationId) {\n        // handleConversationClick(currentConversationId as string);\n        }\n        clearStorage();\n    }, [\n        currentConversationId\n    ]); // Dependency array includes state that triggers this effect\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        isLoading\n    ]);\n    //Fetch Message for this converations\n    const messagesRefCounter = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        messagesRefCounter\n    ]);\n    const fetchMessagesForConversation = async (conversationId)=>{\n        messagesRefCounter.current += 1;\n        if (messagesRefCounter.current > 1) {\n            return;\n        }\n        if (!session || !session.user || !session.user.id) {\n            console.error(\"No user session available\");\n            return;\n        }\n        setMessagesIsLoading(true);\n        console.log(\"Fetching messages for conversation:\", conversationId);\n        if (!conversationId) {\n            console.error(\"no conversatoin ID\");\n            return;\n        } else {\n            try {\n                const response = await fetch(\"/api/storedMessages?authorId=\".concat(session === null || session === void 0 ? void 0 : session.user.id, \"&conversationId=\").concat(conversationId));\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch messages\");\n                }\n                const messages = await response.json();\n                // console.log(\"Add the IDS\",messages.map(msgs => msgs.id))\n                // Map API response to expected format in state\n                //Naming conventions matter\n                const formattedMessages = messages.map((msg)=>({\n                        question: msg.userContent,\n                        response: msg.botResponse,\n                        imageUrl: msg.imageUrl,\n                        id: msg.id\n                    }));\n                setResponses([]);\n                if (response.ok) {\n                    setResponses(formattedMessages);\n                }\n                setMessagesIsLoading(false);\n            } catch (error) {\n                setMessagesIsLoading(true);\n                console.error(\"Error fetching messages:\", error);\n            }\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setResponses([]); // Clear previous messages\n        if (status === \"authenticated\" && session) {\n            // Fetch messages for the current conversation if needed\n            if (currentConversationId === null) {\n                fetchMessagesForConversation(currentConversationId || localStorageConvoId);\n            } else {\n            // console.log(\"Fech is doing good\", currentConversationId);\n            }\n        }\n    }, [\n        currentConversationId\n    ]);\n    if (!conversations) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            children: \"No conversation found.\"\n        }, void 0, false, {\n            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n            lineNumber: 494,\n            columnNumber: 12\n        }, this);\n    }\n    const [chatContainerShown, setChatContainerShown] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        console.log(\"Responses\", selectedFile);\n    }, [\n        selectedFile\n    ]);\n    //Function takes you to the bottom of the div by clicking the floating button.\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"chatDashboard text-white\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chat_ChatContainer__WEBPACK_IMPORTED_MODULE_10__.ChatContainer, {\n                setConversations: setConversations,\n                conversations: conversations,\n                currentConversationId: currentConversationId,\n                splitUserName: splitUserName,\n                userName: userName || \"\",\n                email: email || \"\",\n                onConversationClick: handleConversationClick,\n                onDeleteConvo: deleteConversation,\n                onChangeConvoTitle: handleSubmitTitle,\n                handleTitleClick: handleTitleClick,\n                editTitleId: editTitleId,\n                editedTitle: editedTitle,\n                handleTitleChange: handleTitleChange,\n                editingTitle: editingTitle,\n                titleUpdated: titleUpdated,\n                chatContainerRef: chatContainerRef,\n                handleMobileChatBtnClick: handleMobileChatBtnClick\n            }, void 0, false, {\n                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n                lineNumber: 510,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: chatDashBoardRef,\n                className: \"chatDashboardWrapper w-full text-left\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"chatDashBoardContainer \"\n                }, void 0, false, {\n                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n                    lineNumber: 538,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n                lineNumber: 532,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/profile/page.tsx\",\n        lineNumber: 507,\n        columnNumber: 5\n    }, this);\n}\n_s(Profile, \"O42q7BXtoX9/VIAI4AJrezSIG54=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter,\n        _hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_5__.useSessionStorage,\n        _hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_7__.useChatConversation,\n        next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession,\n        _hooks_useConversations__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n        _hooks_createConversation__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n    ];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYWkvcHJvZmlsZS9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTRDO0FBUzdCO0FBQzBDO0FBR3pELDZCQUE2QjtBQUNnQjtBQUNpQjtBQUNUO0FBRXJELG9EQUFvRDtBQUNwRCxZQUFZO0FBRXNEO0FBQ0g7QUFDUDtBQUN4RCxnQkFBZ0I7QUFDc0M7QUFJdEQsNEVBQTRFO0FBQzVFLHNGQUFzRjtBQUN0RiwrREFBK0Q7QUFDL0Qsa0VBQWtFO0FBQ25ELFNBQVNhOztJQUV0QixNQUFNQyxTQUFTZCwwREFBU0E7SUFDeEIsTUFBTWUsVUFBVVgsNkNBQU1BLENBQWtCO0lBQ3hDLHlFQUF5RTtJQUV6RSxNQUFNLENBQUNZLGVBQWVDLGlCQUFpQixHQUFHZiwrQ0FBUUEsQ0FBUztJQUMzRCxNQUFNLENBQUNnQixRQUFRQyxVQUFVLEdBQUdqQiwrQ0FBUUEsQ0FBUztJQUM3QyxNQUFNLENBQUNrQixnQkFBZ0JDLGtCQUFrQixHQUFHbkIsK0NBQVFBLENBQUM7SUFHckQscUJBQXFCO0lBRXJCLE1BQU0sRUFDSm9CLFFBQVEsRUFDUkMsV0FBVyxFQUNYQyxhQUFhLEVBQ2JDLEtBQUssRUFDTEMsUUFBUSxFQUNSQyxnQkFBZ0IsRUFDakIsR0FBR3BCLDJFQUFpQkE7SUFFckIsTUFBTSxFQUFFcUIsU0FBUyxFQUFFQyxZQUFZLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFLEdBQ3BEdEIsK0VBQW1CQTtJQUVyQixJQUFJdUI7SUFFSjdCLGdEQUFTQSxDQUFDO1FBQ1IsSUFBSThCLGFBQWFDLE9BQU8sQ0FBQywwQkFBMEI7WUFDakRGLHNCQUFzQkMsYUFBYUMsT0FBTyxDQUFDO1lBQzNDQyx5QkFBeUJIO1FBQzNCO0lBQ0YsR0FBRyxFQUFFO0lBRUwsTUFBTSxFQUFFSSxNQUFNQyxPQUFPLEVBQUVDLE1BQU0sRUFBRSxHQUFHakMsMkRBQVVBO0lBQzVDLE1BQU0sQ0FBQ2tDLG1CQUFtQkMs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LDhEQUFDdEksK0RBQWFBO2dCQUNaa0Msa0JBQWtCQTtnQkFDbEJGLGVBQWVBO2dCQUNmRCx1QkFBdUJBO2dCQUN2Qm5CLGVBQWVBO2dCQUNmRixVQUFVQSxZQUFZO2dCQUN0QkcsT0FBT0EsU0FBUztnQkFDaEIwSCxxQkFBcUJwQjtnQkFDckJxQixlQUFlcEQ7Z0JBQ2ZxRCxvQkFBb0JoQztnQkFDcEIzQyxrQkFBa0JBO2dCQUNsQlIsYUFBYUE7Z0JBQ2JFLGFBQWFBO2dCQUNiYSxtQkFBbUJBO2dCQUNuQlgsY0FBY0E7Z0JBQ2RFLGNBQWNBO2dCQUNkcEIsa0JBQWtCQTtnQkFDbEJHLDBCQUEwQkE7Ozs7OzswQkFLNUIsOERBQUMwRjtnQkFDQ0ssS0FBSzFCO2dCQUNMc0IsV0FBVTswQkFJViw0RUFBQ0Q7b0JBQUlDLFdBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU3pCO0dBL2Z3QnJJOztRQUVQYixzREFBU0E7UUFrQnBCTyx1RUFBaUJBO1FBR25CRSwyRUFBbUJBO1FBV2FKLHVEQUFVQTtRQWNXTSwrREFBZ0JBO1FBTXJFRCxpRUFBcUJBOzs7S0F0RERHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvYWkvcHJvZmlsZS9wYWdlLnRzeD9mYzM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5pbXBvcnQgeyB1c2VQYXRobmFtZSB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIjtcbmltcG9ydCBSZWFjdCwge1xuICB1c2VTdGF0ZSxcbiAgdXNlRWZmZWN0LFxuICB1c2VSZWYsXG4gIHVzZSxcbiAgdXNlSWQsXG4gIEZvcm1FdmVudCxcbn0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VTZXNzaW9uLCBnZXRTZXNzaW9uIH0gZnJvbSBcIm5leHQtYXV0aC9yZWFjdFwiO1xuaW1wb3J0IHsgU2Vzc2lvbiB9IGZyb20gXCJuZXh0LWF1dGhcIjtcblxuLy9VdGlsaXMgYW5kIGhlbHBlciBmdW5jdGlvbnNcbmltcG9ydCB7IGlzQ2xpZW50IH0gZnJvbSBcIkAvdXRpbGlzL2lzQ2xpZW50XCI7XG5pbXBvcnQgeyB1c2VTZXNzaW9uU3RvcmFnZSB9IGZyb20gXCJAL2hvb2tzL3VzZVNlc3Npb25TdG9yYWdlXCI7XG5pbXBvcnQgeyBjaGVja1Nlc3Npb24gfSBmcm9tIFwiQC91dGlsaXMvQ2hlY2tTZXNzaW9uXCI7XG5cbi8vIGltcG9ydCB7IEhlYWRlciB9IGZyb20gXCJAL2FwcC9jb21wb25lbnRzL0hlYWRlclwiO1xuLy8gRGFzaGJvYXJkXG5cbmltcG9ydCB7IHVzZUNoYXRDb252ZXJzYXRpb24gfSBmcm9tIFwiQC9ob29rcy9Db252ZXJzYXRpb25Db250ZXh0XCI7XG5pbXBvcnQgdXNlQ3JlYXRlQ29udmVyc2F0aW9uIGZyb20gXCJAL2hvb2tzL2NyZWF0ZUNvbnZlcnNhdGlvblwiO1xuaW1wb3J0IHVzZUNvbnZlcnNhdGlvbnMgZnJvbSBcIkAvaG9va3MvdXNlQ29udmVyc2F0aW9uc1wiO1xuLy9DaGF0IENvbnRhaW5lclxuaW1wb3J0IHsgQ2hhdENvbnRhaW5lciB9IGZyb20gXCIuLi9jaGF0L0NoYXRDb250YWluZXJcIjtcblxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG4vLyBpbXBvcnQgRmxvYXRpbmdTY3JvbGxCdXR0b24gZnJvbSBcIkAvYXBwL2NvbXBvbmVudHMvU2Nyb2xsVG9Cb3R0b21CdXR0b25cIjtcbi8vIGltcG9ydCBPcGVuQ2hhdENvbnRhaW5lciBmcm9tIFwiQC9hcHAvY29tcG9uZW50cy9oZWxwZXIvb3BlbkNoYXRDb250YWluZXJDb21wb25lbnRcIjtcbi8vIGltcG9ydCB7IHVzZVNlc3Npb25HYXRlIH0gZnJvbSBcIkAvYXBwL3Byb2ZpbGUvX21pZGRsZXdoZXJlXCI7XG4vLyBpbXBvcnQgTG9hZGluZ0NvbXBvbmVudCBmcm9tIFwiQC9hcHAvY29tcG9uZW50cy9oZWxwZXIvTG9hZGluZ1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUHJvZmlsZSgpIHtcblxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3QgZm9ybVJlZiA9IHVzZVJlZjxIVE1MRm9ybUVsZW1lbnQ+KG51bGwpO1xuICAvL1Nob3VsZCB3cmFwIHRoZXNlIGluIGEgYmlnZ2VyIGZ1bmN0aW9uIHNpbmNlIGJlaW5nIHVzZWQgbXVsdGlwbGUgdGltZXM/XG5cbiAgY29uc3QgW3Nlc3Npb25TdGF0dXMsIHNldFNlc3Npb25TdGF0dXNdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcbiAgY29uc3QgW3VzZXJJZCwgc2V0VXNlcklkXSA9IHVzZVN0YXRlPHN0cmluZz4oXCJcIik7XG4gIGNvbnN0IFtzaG93R3VpZGVsaW5lcywgc2V0U2hvd0d1aWRlbGluZXNdID0gdXNlU3RhdGUodHJ1ZSk7XG5cblxuICAvL0xpc3Qgb2YgIFBERiBpbWFnc2VcblxuICBjb25zdCB7XG4gICAgdXNlck5hbWUsXG4gICAgc2V0VXNlck5hbWUsXG4gICAgc3BsaXRVc2VyTmFtZSxcbiAgICBlbWFpbCxcbiAgICBzZXRFbWFpbCxcbiAgICBzZXRTcGxpdFVzZXJOYW1lLFxuICB9ID0gdXNlU2Vzc2lvblN0b3JhZ2UoKTtcblxuICBjb25zdCB7IHJlc3BvbnNlcywgc2V0UmVzcG9uc2VzLCBtZXNzYWdlLCBzZXRNZXNzYWdlIH0gPVxuICAgIHVzZUNoYXRDb252ZXJzYXRpb24oKTtcblxuICBsZXQgbG9jYWxTdG9yYWdlQ29udm9JZDogYW55O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudENvbnZlcnNhdGlvbklkXCIpKSB7XG4gICAgICBsb2NhbFN0b3JhZ2VDb252b0lkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjdXJyZW50Q29udmVyc2F0aW9uSWRcIik7XG4gICAgICBzZXRDdXJyZW50Q29udmVyc2F0aW9uSWQobG9jYWxTdG9yYWdlQ29udm9JZCk7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgY29uc3QgeyBkYXRhOiBzZXNzaW9uLCBzdGF0dXMgfSA9IHVzZVNlc3Npb24oKTtcbiAgY29uc3QgW21lc3NhZ2VzSXNMb2FkaW5nLCBzZXRNZXNzYWdlc0lzTG9hZGluZ10gPSB1c2VTdGF0ZTxudWxsIHwgYm9vbGVhbj4oXG4gICAgbnVsbFxuICApO1xuXG4gIGNvbnN0IFtpc1JlcG9uc2VMb2FkaW5nLCBzZXRSZXNwb25zZUxvYWRpbmddID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuXG4gIC8vU2V0IHRoZSBjb252ZXJzYXRpb25cbiAgY29uc3QgW2N1cnJlbnRDb252ZXJzYXRpb25JZCwgc2V0Q3VycmVudENvbnZlcnNhdGlvbklkXSA9IHVzZVN0YXRlPFxuICAgIG51bWJlciB8IHN0cmluZyB8IG51bGxcbiAgPihudWxsKTtcblxuICAvLyBjb25zdCBbbmV3VGl0bGUsIHNldE5ld1RpdGxlXSA9IHVzZVN0YXRlKFwiXCIpO1xuXG4gIGNvbnN0IHsgY29udmVyc2F0aW9ucywgaXNMb2FkaW5nLCBzZXRDb252ZXJzYXRpb25zIH0gPSB1c2VDb252ZXJzYXRpb25zKFxuICAgIHNlc3Npb24gYXMgYW55XG4gICk7XG5cbiAgLy9DcmVhdGluZyBhIG5ldyBDb252ZXJzYXRpb24uXG4gIGNvbnN0IHsgY3JlYXRlQ29udmVyc2F0aW9uLCBuZXdUaXRsZSwgc2V0TmV3VGl0bGUsIGlzQ3JlYXRlTG9hZGluZywgZXJyb3IgfSA9XG4gICAgdXNlQ3JlYXRlQ29udmVyc2F0aW9uKFxuICAgICAgc2Vzc2lvbiBhcyBTZXNzaW9uLFxuICAgICAgc2V0Q29udmVyc2F0aW9ucyBhcyBhbnksXG4gICAgICBzZXRDdXJyZW50Q29udmVyc2F0aW9uSWRcbiAgICApO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2hlY2tTZXNzaW9uKHN0YXR1cywge1xuICAgICAgc2V0VXNlcklkLFxuICAgICAgc2V0VXNlck5hbWUsXG4gICAgICBzZXRTZXNzaW9uU3RhdHVzLFxuICAgICAgc2V0RW1haWwsXG4gICAgICBzZXRTcGxpdFVzZXJOYW1lLFxuICAgICAgaXNDbGllbnQsXG4gICAgICBzZXNzaW9uLFxuICAgICAgcm91dGVyLFxuICAgICAgZW1haWwsXG4gICAgICB1c2VyTmFtZSxcbiAgICAgIHNwbGl0VXNlck5hbWUsXG4gICAgfSk7XG4gIH0sIFtzdGF0dXNdKTtcblxuICAvL1RoaXMgZnVuY2l0bm8gc2hpZnRzIGFuZCBzaG93cyB0aGUgbW9iaWxlIENoYXQgY2NvbnRhaW5lclxuICBjb25zdCBjaGF0Q29udGFpbmVyUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcbiAgY29uc3QgW2lzQXRaZXJvLCBzZXRJc0F0WmVyb10gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7IC8vIFN0YXRlIHRvIHRyYWNrIHRoZSBwb3NpdGlvblxuXG4gIGNvbnN0IGhhbmRsZU1vYmlsZUNoYXRCdG5DbGljayA9ICgpID0+IHtcbiAgICBpZiAoY2hhdENvbnRhaW5lclJlZi5jdXJyZW50KSB7XG4gICAgICBpZiAoaXNBdFplcm8pIHtcbiAgICAgICAgY2hhdENvbnRhaW5lclJlZi5jdXJyZW50LnN0eWxlLnRyYW5zZm9ybSA9IFwidHJhbnNsYXRlWCgtMTAwJSlcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNoYXRDb250YWluZXJSZWYuY3VycmVudC5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZVgoMHB4KVwiO1xuICAgICAgfVxuICAgICAgc2V0SXNBdFplcm8oIWlzQXRaZXJvKTsgLy8gVG9nZ2xlIHRoZSBzdGF0ZVxuICAgIH1cbiAgfTtcblxuICAvLyBFZmZlY3QgdG8gaGFuZGxlIHZpZXdwb3J0IHJlc2l6ZVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZVJlc2l6ZSA9ICgpID0+IHtcbiAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+PSA5NTAgJiYgY2hhdENvbnRhaW5lclJlZi5jdXJyZW50KSB7XG4gICAgICAgIGNoYXRDb250YWluZXJSZWYuY3VycmVudC5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZVgoMHB4KVwiO1xuICAgICAgICBzZXRJc0F0WmVybyhmYWxzZSk7IC8vIFJlc2V0IHRoZSBzdGF0ZVxuICAgICAgfSBlbHNlIGlmIChjaGF0Q29udGFpbmVyUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY2hhdENvbnRhaW5lclJlZi5jdXJyZW50LnN0eWxlLnRyYW5zZm9ybSA9IFwidHJhbnNsYXRlWCgtMTAwJSlcIjtcbiAgICAgICAgc2V0SXNBdFplcm8odHJ1ZSk7IC8vIFJlc2V0IHRoZSBzdGF0ZVxuICAgICAgfVxuICAgIH07XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBoYW5kbGVSZXNpemUpO1xuXG4gICAgLy8gQ2xlYW51cCBldmVudCBsaXN0ZW5lciBvbiBjb21wb25lbnQgdW5tb3VudFxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBoYW5kbGVSZXNpemUpO1xuICAgIH07XG4gIH0sIFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1c2VyTmFtZSAhPT0gbnVsbCkge1xuICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcInVzZXJOYW1lXCIsIHVzZXJOYW1lKTtcbiAgICB9XG5cbiAgICBpZiAoc3BsaXRVc2VyTmFtZSAhPT0gXCJcIikge1xuICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcInNwbGl0VXNlck5hbWVcIiwgc3BsaXRVc2VyTmFtZSk7XG4gICAgfVxuICB9LCBbdXNlck5hbWUsIHNwbGl0VXNlck5hbWVdKTtcblxuICBjb25zdCBbZWRpdFRpdGxlSWQsIHNldEVkaXRUaXRsZUlkXSA9IHVzZVN0YXRlPG51bGw+KG51bGwpO1xuICBjb25zdCBbZWRpdGVkVGl0bGUsIHNldEVkaXRlZFRpdGxlXSA9IHVzZVN0YXRlPHN0cmluZz4oXCJcIik7XG4gIGNvbnN0IFtlZGl0aW5nVGl0bGUsIHNldEVkaXRpbmdUaXRsZV0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XG4gIGNvbnN0IFt0aXRsZVVwZGF0ZWQsIHNldFRpdGxlVXBkYXRlZF0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7IC8vIE5ldyBzdGF0ZSBmb3IgdGl0bGUgdXBkYXRlc1xuXG4gIC8vRWRpdGluZyB0aGUgYWJpbGl0eSB0byBjaGFuZ2UgdGhlIGV4aXN0aW5nIHRpdGxlLlxuICBjb25zdCBoYW5kbGVUaXRsZUNsaWNrID0gKGNvbnZvSWQ6IHN0cmluZyB8IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IGNvbnZlcnNhdGlvbiA9IGNvbnZlcnNhdGlvbnMuZmluZChcbiAgICAgIChjb252bykgPT4gKGNvbnZvIGFzIGFueSkuY29udmVyc2F0aW9uSWQgPT09IGNvbnZvSWRcbiAgICApO1xuXG4gICAgaWYgKGNvbnZlcnNhdGlvbikge1xuICAgICAgc2V0RWRpdFRpdGxlSWQoKGNvbnZlcnNhdGlvbiBhcyBhbnkpLmNvbnZlcnNhdGlvbklkKTtcbiAgICAgIHNldEVkaXRlZFRpdGxlKChjb252ZXJzYXRpb24gYXMgYW55KS50aXRsZSk7XG4gICAgICBzZXRFZGl0aW5nVGl0bGUodHJ1ZSBhcyBib29sZWFuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gY29uc29sZS5sb2coYENvbnZlcnNhdGlvbiB3aXRoIElEICR7Y29udm9JZH0gbm90IGZvdW5kYCk7XG4gICAgfVxuICB9O1xuICB1c2VFZmZlY3QoKCkgPT4ge30sIFtlZGl0VGl0bGVJZCwgZWRpdGVkVGl0bGVdKTtcblxuICBjb25zdCBoYW5kbGVUaXRsZUNoYW5nZSA9IChldmVudDogYW55KSA9PiB7XG4gICAgc2V0RWRpdGVkVGl0bGUoZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgfTtcblxuICBhc3luYyBmdW5jdGlvbiBnZXRDb252ZXJzYXRpb24oY29udmVyc2F0aW9uSWQ6IGFueSkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpLyR7Y29udmVyc2F0aW9uSWR9YCk7XG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBjb252ZXJzYXRpb25cIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHVwZGF0ZWRDb252ZXJzYXRpb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcbiAgICAgIC8vICAgXCJMb2dnaW5nIHRoZSBjb252ZXJhdGlvbnMgYmVmb3JlIGVycm9yd1wiLFxuICAgICAgLy8gICB1cGRhdGVkQ29udmVyc2F0aW9uXG4gICAgICAvLyApO1xuICAgICAgLy8gVXBkYXRlIGxvY2FsIHN0YXRlXG4gICAgICBzZXRDb252ZXJzYXRpb25zKChwcmV2Q29udmVyc2F0aW9ucykgPT4ge1xuICAgICAgICByZXR1cm4gcHJldkNvbnZlcnNhdGlvbnMubWFwKChjb252bykgPT5cbiAgICAgICAgICBjb252byA9PT0gY29udmVyc2F0aW9uSWRcbiAgICAgICAgICAgID8geyAuLi5jb252bywgdGl0bGU6IHVwZGF0ZWRDb252ZXJzYXRpb24udGl0bGUgfVxuICAgICAgICAgICAgOiBjb252b1xuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICAgIHVwZGF0ZUxvY2FsU3RvcmFnZSh1cGRhdGVkQ29udmVyc2F0aW9uLCBjb252ZXJzYXRpb25JZCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBjb252ZXJzYXRpb246XCIsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yOyAvLyBSZS10aHJvdyB0byBoYW5kbGUgaXQgaW4gdGhlIFVJIGxheWVyXG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZnVuY3Rpb24gZGVsZXRlQ29udmVyc2F0aW9uKGNvbnZlcnNhdGlvbklkOiBzdHJpbmcgfCBudW1iZXIpIHtcbiAgICBjb25zdCBjdXJyZW50Q29udmVyc2F0aW9ucyA9IGNvbnZlcnNhdGlvbnM7XG5cblxuICAgIGNvbnNvbGUubG9nKFwiQ29udmVyc2F0aW9uIElEXCIsIGNvbnZlcnNhdGlvbklkKTtcblxuICAgIC8vIE9wdGltaXN0aWNhbGx5IHJlbW92ZSB0aGUgY29udmVyc2F0aW9uIGZyb20gVUlcbiAgICBjb25zdCB1cGRhdGVkQ29udmVyc2F0aW9ucyA9IGN1cnJlbnRDb252ZXJzYXRpb25zLmZpbHRlcihcbiAgICAgIChjb252bykgPT4gKGNvbnZvIGFzIGFueSkuY29udmVyc2F0aW9uSWQgIT09IGNvbnZlcnNhdGlvbklkXG4gICAgKTtcblxuICAgIHNldENvbnZlcnNhdGlvbnModXBkYXRlZENvbnZlcnNhdGlvbnMpO1xuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXG4gICAgICBcImNvbnZlcnNhdGlvbnNcIixcbiAgICAgIEpTT04uc3RyaW5naWZ5KHVwZGF0ZWRDb252ZXJzYXRpb25zKVxuICAgICk7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9kZWxldGVDb252ZXJzYXRpb25zL2AsIHtcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgaWQ6IGNvbnZlcnNhdGlvbklkIH0pLFxuICAgICAgfSk7XG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBkZWxldGUgdGhlIGNvbnZlcnNhdGlvblwiKTtcbiAgICAgIH1cblxuICAgICAgLy8gRmlsdGVyIG91dCB0aGUgZGVsZXRlZCBjb252ZXJzYXRpb25cbiAgICAgIGNvbnN0IHVwZGF0ZWRDb252ZXJzYXRpb25zID0gY29udmVyc2F0aW9ucy5maWx0ZXIoXG4gICAgICAgIChjb252bykgPT4gKGNvbnZvIGFzIGFueSkuY29udmVyYXRvaW5JRCAhPT0gY29udmVyc2F0aW9uSWRcbiAgICAgICk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIkxvZ2dpbmcgb3V0IHRoZSBDb252ZXJzYXRpb24gRmlsdGVyXCIsIGNvbnZlcnNhdGlvbnMpO1xuXG4gICAgICAvLyBVcGRhdGUgc3RhdGUgYW5kIGxvY2FsIHN0b3JhZ2VcbiAgICAgIHNldENvbnZlcnNhdGlvbnModXBkYXRlZENvbnZlcnNhdGlvbnMpOyAvLyBVcGRhdGUgUmVhY3Qgc3RhdGVcbiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXG4gICAgICAgIFwiY29udmVyc2F0aW9uc1wiLFxuICAgICAgICBKU09OLnN0cmluZ2lmeSh1cGRhdGVkQ29udmVyc2F0aW9ucylcbiAgICAgICk7IC8vIFVwZGF0ZSBsb2NhbCBzdG9yYWdlXG5cbiAgXG5cbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICAvLyBVcGRhdGUgdGhlIGNvbnZlcnNhdGlvbnMgc3RhdGVcbiAgICAgICAgY29uc3QgdXBkYXRlZENvbnZlcnNhdGlvbnMgPSBjb252ZXJzYXRpb25zLmZpbHRlcihcbiAgICAgICAgICAoY29udm8pID0+IChjb252byBhcyBhbnkpLmNvbnZlcnNhdGlvbklkICE9PSBjb252ZXJzYXRpb25JZFxuICAgICAgICApO1xuICAgICAgICBzZXRDb252ZXJzYXRpb25zKHVwZGF0ZWRDb252ZXJzYXRpb25zKTtcblxuICAgICAgICAvLyBVcGRhdGUgdGhlIHNlc3Npb24gc3RvcmFnZVxuICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgICAgIFwiY29udmVyc2F0aW9uc1wiLFxuICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHVwZGF0ZWRDb252ZXJzYXRpb25zKVxuICAgICAgICApO1xuICAgICAgICByb3V0ZXIucHVzaChgL2FpL2NoYXRgKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGRlbGV0aW5nIGNvbnZlcnNhdGlvbjpcIiwgZXJyb3IpO1xuICAgICAgYWxlcnQoXCJDb3VsZCBub3QgZGVsZXRlIHRoZSBjb252ZXJzYXRpb24uIFBsZWFzZSB0cnkgYWdhaW4uXCIpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZUxvY2FsU3RvcmFnZShcbiAgICB1cGRhdGVkQ29udmVyc2F0aW9uOiBhbnksXG4gICAgY29udmVyc2F0aW9uSWQ6IG51bWJlclxuICApIHtcbiAgICBsZXQgY2FjaGVkQ29udmVyc2F0aW9ucyA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJjb252ZXJzYXRpb25zXCIpO1xuXG4gICAgaWYgKGNhY2hlZENvbnZlcnNhdGlvbnMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFBhcnNlIHRoZSBjYWNoZWQgY29udmVyc2F0aW9uc1xuICAgICAgICBjb25zdCBwYXJzZWRDb252ZXJzYXRpb25zID0gSlNPTi5wYXJzZShjYWNoZWRDb252ZXJzYXRpb25zKTtcblxuICAgICAgICAvLyBFbnN1cmUgdGhhdCBwYXJzZWRDb252ZXJzYXRpb25zIGlzIGFuIGFycmF5XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHBhcnNlZENvbnZlcnNhdGlvbnMpKSB7XG4gICAgICAgICAgY29uc3QgdXBkYXRlZENhY2hlID0gcGFyc2VkQ29udmVyc2F0aW9ucy5tYXAoKGNvbnZvKSA9PlxuICAgICAgICAgICAgY29udm8uY29udmVyc2F0aW9uSWQgPT09IGNvbnZlcnNhdGlvbklkXG4gICAgICAgICAgICAgID8geyAuLi5jb252bywgdGl0bGU6IHVwZGF0ZWRDb252ZXJzYXRpb24udGl0bGUgfVxuICAgICAgICAgICAgICA6IGNvbnZvXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJjb252ZXJzYXRpb25zXCIsIEpTT04uc3RyaW5naWZ5KHVwZGF0ZWRDYWNoZSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJQYXJzZWQgY2FjaGVkIGNvbnZlcnNhdGlvbnMgaXMgbm90IGFuIGFycmF5XCIpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBwYXJzaW5nIGNhY2hlZCBjb252ZXJzYXRpb25zOlwiLCBlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCBoYW5kbGVTdWJtaXRUaXRsZSA9IGFzeW5jIChldmVudDogYW55KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gUHJldmVudCBmb3JtIHN1Ym1pc3Npb25cbiAgICBsZXQgdGl0bGVDaGFuZ2U6IHN0cmluZyA9IFwiXCI7XG5cblxuICAgIGNvbnNvbGUubG9nKFwiRXZlbnQgS2V5XCIsIGV2ZW50LmtleSk7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gXCJFbnRlclwiKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBQcmV2ZW50IGZvcm0gc3VibWlzc2lvblxuICAgICAgY29uc3QgbmV3VGl0bGUgPSBlZGl0ZWRUaXRsZTsgLy8gQ2FwdHVyZSB0aGUgdGl0bGUgYXQgdGhlIHRpbWUgb2Ygc3VibWlzc2lvblxuICAgICAgdGl0bGVDaGFuZ2UgPSBlZGl0VGl0bGVJZCA/PyBcIlwiO1xuICAgICAgLy8gY29uc29sZS5sb2coXCJOZXcgdGl0bGUgdG8gYmUgc2V0OlwiLCBuZXdUaXRsZSk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIk5ldyB0aXRsZSBJZCBiZWluZyBsb2dnZWRcIiwgZWRpdFRpdGxlSWQpO1xuXG4gICAgICBpZiAoZWRpdFRpdGxlSWQgIT09IG51bGwgJiYgZWRpdFRpdGxlSWQgIT09IFwiXCIpIHtcbiAgICAgICAgY29uc3QgdXBkYXRlZENvbnZlcnNhdGlvbnMgPSBjb252ZXJzYXRpb25zLm1hcCgoY29udm8pID0+XG4gICAgICAgICAgKGNvbnZvIGFzIGFueSkuY29udmVyc2F0aW9uSWQgPT09IGVkaXRUaXRsZUlkXG4gICAgICAgICAgICA/IHsgLi4uY29udm8sIHRpdGxlOiBuZXdUaXRsZSB9XG4gICAgICAgICAgICA6IGNvbnZvXG4gICAgICAgICk7XG4gICAgICAgIHNldENvbnZlcnNhdGlvbnModXBkYXRlZENvbnZlcnNhdGlvbnMpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIlVwZGF0ZWQgY29udmVyc2F0aW9uczpcIiwgdXBkYXRlZENvbnZlcnNhdGlvbnMpO1xuXG4gICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXG4gICAgICAgICAgXCJjb252ZXJzYXRpb25zXCIsXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkodXBkYXRlZENvbnZlcnNhdGlvbnMpXG4gICAgICAgICk7XG5cbiAgICAgICAgc2V0RWRpdFRpdGxlSWQobnVsbCk7IC8vIEV4aXQgZWRpdCBtb2RlXG4gICAgICAgIHNldEVkaXRlZFRpdGxlKFwiXCIpOyAvLyBDbGVhciB0aGUgZWRpdGVkIHRpdGxlIHN0YXRlXG4gICAgICAgIHNldEVkaXRpbmdUaXRsZShmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGxvY2FsQ29udmVyc2F0aW9uSWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbnRDb252ZXJzYXRpb25JZFwiKTtcbiAgICBjb25zb2xlLmxvZyhcIkxvY2FsIENvbnZlcnNhdGlvbiBJRFwiLCBsb2NhbENvbnZlcnNhdGlvbklkKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9zdWJtaXRUaXRsZS9gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHRpdGxlOiBlZGl0ZWRUaXRsZSwgaWQ6IGxvY2FsQ29udmVyc2F0aW9uSWQgfSksIC8vIFNlbmQgZWRpdGVkVGl0bGUgZGlyZWN0bHlcbiAgICAgIH0pO1xuXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIkFyZSB5b3Ugc2VuZGluZyB0aGUgbmV3IFRpdGxlXCIsIGVkaXRlZFRpdGxlKTtcblxuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIC8vIGF3YWl0IGdldENvbnZlcnNhdGlvbihlZGl0VGl0bGVJZCk7XG4gICAgICAgIHNldEVkaXRpbmdUaXRsZShmYWxzZSk7XG4gICAgICAgIHNldFRpdGxlVXBkYXRlZCgocHJldikgPT4gIXByZXYpOyAvLyBUb2dnbGUgdGhlIHRpdGxlVXBkYXRlZCBzdGF0ZVxuICAgICAgfVxuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byB1cGRhdGUgdGl0bGVcIik7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyB0aXRsZTpcIiwgZXJyb3IpO1xuXG4gICAgICAvLyBJZiB0aGUgdXBkYXRlIGZhaWxzLCByZXZlcnQgdGhlIGNoYW5nZSBpbiB0aGUgVUkgYW5kIGFsZXJ0IHRoZSB1c2VyXG4gICAgICBjb25zdCBvcmlnaW5hbENvbnZlcnNhdGlvbnMgPSBjb252ZXJzYXRpb25zLm1hcCgoY29udm8pID0+XG4gICAgICAgIGNvbnZvLmNvbnZlcnNhdGlvbklkID09PSBlZGl0VGl0bGVJZFxuICAgICAgICAgID8geyAuLi5jb252bywgdGl0bGU6IChjb252byBhcyBhbnkpLnRpdGxlIH1cbiAgICAgICAgICA6IGNvbnZvXG4gICAgICApO1xuXG4gICAgICBzZXRDb252ZXJzYXRpb25zKG9yaWdpbmFsQ29udmVyc2F0aW9ucyk7XG4gICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgICBcImNvbnZlcnNhdGlvbnNcIixcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkob3JpZ2luYWxDb252ZXJzYXRpb25zKVxuICAgICAgKTtcblxuICAgICAgYWxlcnQoXCJGYWlsZWQgdG8gdXBkYXRlIHRpdGxlLCBwbGVhc2UgdHJ5IGFnYWluLlwiKTsgLy8gSW5mb3JtIHRoZSB1c2VyXG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNoYXREYXNoQm9hcmRSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICAgXG5cbiAgY29uc3QgW3NlbGVjdGVkRmlsZSwgc2V0c2VsZWN0ZWRGaWxlXSA9IHVzZVN0YXRlKG51bGwpO1xuIFxuICBcblxuXG5cblxuICBjb25zdCBoYW5kbGVDb252ZXJzYXRpb25DbGljayA9IChjb252b0lkOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCB0YXJnZXRQYXRoID0gYC9haS9jaGF0LyR7c2Vzc2lvbj8udXNlci5pZH0vJHtjb252b0lkfWA7XG5cbiAgICByb3V0ZXIucHVzaCh0YXJnZXRQYXRoLCB1bmRlZmluZWQpO1xuXG4gICAgLy9TdG9yZSB0aGUgQ3VycmVudCBjb252ZXJhdG9pbklEIGluIGxvY2FsIHRvIHBlcnNpdCBvbiBjaGFuaW5nIHRoZSBuYXZpZ2F0aW9uXG4gICAgbGV0IGxvY2FsU3RvcmFnZUNvbnZvSWQ6IGFueTtcblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3VycmVudENvbnZlcnNhdGlvbklkXCIsIGNvbnZvSWQpO1xuICAgIC8vIGNvbnNvbGUubG9nKFxuICAgIC8vICAgXCJMb2dnaW5nIHRoZSBjdXJyZW50IGNvbnZlcnNhdGlvbiBJRFwiLFxuICAgIC8vICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjdXJyZW50Q29udmVyc2F0aW9uSWRcIilcbiAgICAvLyApO1xuXG4gICAgbG9jYWxTdG9yYWdlQ29udm9JZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudENvbnZlcnNhdGlvbklkXCIpO1xuICAgIHNldEN1cnJlbnRDb252ZXJzYXRpb25JZChjb252b0lkKTtcbiAgfTtcblxuICAvL0dldCB0aGUgZnVsbCBNZXNzYWdlIENvbnZlcnNhdGlvbi5cblxuICBjb25zdCBjbGVhclN0b3JhZ2UgPSAoKSA9PiB7XG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShcImluaXRpYWxNZXNzYWdlXCIpO1xuICB9O1xuXG4gIC8vQW5vdGhlciBIb29rIENoZWNrIGZvciB0aGUgbG9jYWwgc3RvcmFnZVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChjdXJyZW50Q29udmVyc2F0aW9uSWQpIHtcbiAgICAgIC8vIGhhbmRsZUNvbnZlcnNhdGlvbkNsaWNrKGN1cnJlbnRDb252ZXJzYXRpb25JZCBhcyBzdHJpbmcpO1xuICAgIH1cbiAgICBjbGVhclN0b3JhZ2UoKTtcbiAgfSwgW2N1cnJlbnRDb252ZXJzYXRpb25JZF0pOyAvLyBEZXBlbmRlbmN5IGFycmF5IGluY2x1ZGVzIHN0YXRlIHRoYXQgdHJpZ2dlcnMgdGhpcyBlZmZlY3RcblxuICB1c2VFZmZlY3QoKCkgPT4ge30sIFtpc0xvYWRpbmddKTtcblxuXG5cbiAgLy9GZXRjaCBNZXNzYWdlIGZvciB0aGlzIGNvbnZlcmF0aW9uc1xuICBjb25zdCBtZXNzYWdlc1JlZkNvdW50ZXIgPSB1c2VSZWYoMCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7fSwgW21lc3NhZ2VzUmVmQ291bnRlcl0pO1xuICBjb25zdCBmZXRjaE1lc3NhZ2VzRm9yQ29udmVyc2F0aW9uID0gYXN5bmMgKGNvbnZlcnNhdGlvbklkOiBzdHJpbmcpID0+IHtcbiAgICBtZXNzYWdlc1JlZkNvdW50ZXIuY3VycmVudCArPSAxO1xuICAgIGlmIChtZXNzYWdlc1JlZkNvdW50ZXIuY3VycmVudCA+IDEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXNlc3Npb24gfHwgIXNlc3Npb24udXNlciB8fCAhc2Vzc2lvbi51c2VyLmlkKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTm8gdXNlciBzZXNzaW9uIGF2YWlsYWJsZVwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc2V0TWVzc2FnZXNJc0xvYWRpbmcodHJ1ZSk7XG5cbiAgICBjb25zb2xlLmxvZyhcIkZldGNoaW5nIG1lc3NhZ2VzIGZvciBjb252ZXJzYXRpb246XCIsIGNvbnZlcnNhdGlvbklkKTtcblxuICAgIGlmICghY29udmVyc2F0aW9uSWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJubyBjb252ZXJzYXRvaW4gSURcIik7XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgYC9hcGkvc3RvcmVkTWVzc2FnZXM/YXV0aG9ySWQ9JHtzZXNzaW9uPy51c2VyLmlkfSZjb252ZXJzYXRpb25JZD0ke2NvbnZlcnNhdGlvbklkfWBcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBtZXNzYWdlc1wiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtZXNzYWdlcyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIkFkZCB0aGUgSURTXCIsbWVzc2FnZXMubWFwKG1zZ3MgPT4gbXNncy5pZCkpXG5cbiAgICAgICAgLy8gTWFwIEFQSSByZXNwb25zZSB0byBleHBlY3RlZCBmb3JtYXQgaW4gc3RhdGVcbiAgICAgICAgLy9OYW1pbmcgY29udmVudGlvbnMgbWF0dGVyXG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZE1lc3NhZ2VzID0gbWVzc2FnZXMubWFwKChtc2c6IE1lc3NhZ2UpID0+ICh7XG4gICAgICAgICAgcXVlc3Rpb246IG1zZy51c2VyQ29udGVudCxcbiAgICAgICAgICByZXNwb25zZTogbXNnLmJvdFJlc3BvbnNlLFxuICAgICAgICAgIGltYWdlVXJsOiBtc2cuaW1hZ2VVcmwsXG4gICAgICAgICAgaWQ6IG1zZy5pZCxcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHNldFJlc3BvbnNlcyhbXSk7XG5cbiAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgc2V0UmVzcG9uc2VzKGZvcm1hdHRlZE1lc3NhZ2VzKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRNZXNzYWdlc0lzTG9hZGluZyhmYWxzZSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBzZXRNZXNzYWdlc0lzTG9hZGluZyh0cnVlKTtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIG1lc3NhZ2VzOlwiLCBlcnJvcik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRSZXNwb25zZXMoW10pOyAvLyBDbGVhciBwcmV2aW91cyBtZXNzYWdlc1xuXG4gICAgaWYgKHN0YXR1cyA9PT0gXCJhdXRoZW50aWNhdGVkXCIgJiYgc2Vzc2lvbikge1xuICAgICAgLy8gRmV0Y2ggbWVzc2FnZXMgZm9yIHRoZSBjdXJyZW50IGNvbnZlcnNhdGlvbiBpZiBuZWVkZWRcbiAgICAgIGlmIChjdXJyZW50Q29udmVyc2F0aW9uSWQgPT09IG51bGwpIHtcbiAgICAgICAgZmV0Y2hNZXNzYWdlc0ZvckNvbnZlcnNhdGlvbihcbiAgICAgICAgICAoY3VycmVudENvbnZlcnNhdGlvbklkIGFzIGFueSkgfHwgbG9jYWxTdG9yYWdlQ29udm9JZFxuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJGZWNoIGlzIGRvaW5nIGdvb2RcIiwgY3VycmVudENvbnZlcnNhdGlvbklkKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtjdXJyZW50Q29udmVyc2F0aW9uSWRdKTtcblxuICBpZiAoIWNvbnZlcnNhdGlvbnMpIHtcbiAgICByZXR1cm4gPHA+Tm8gY29udmVyc2F0aW9uIGZvdW5kLjwvcD47XG4gIH1cblxuICBjb25zdCBbY2hhdENvbnRhaW5lclNob3duLCBzZXRDaGF0Q29udGFpbmVyU2hvd25dID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcIlJlc3BvbnNlc1wiLCBzZWxlY3RlZEZpbGUpO1xuICB9LCBbc2VsZWN0ZWRGaWxlXSk7XG5cbiAgLy9GdW5jdGlvbiB0YWtlcyB5b3UgdG8gdGhlIGJvdHRvbSBvZiB0aGUgZGl2IGJ5IGNsaWNraW5nIHRoZSBmbG9hdGluZyBidXR0b24uXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNoYXREYXNoYm9hcmQgdGV4dC13aGl0ZVwiPlxuICAgICAgey8qIENoYXQgQ29udGFpbmVyIENvbXBvbmV0ICAqL31cblxuICAgICAgPENoYXRDb250YWluZXJcbiAgICAgICAgc2V0Q29udmVyc2F0aW9ucz17c2V0Q29udmVyc2F0aW9uc31cbiAgICAgICAgY29udmVyc2F0aW9ucz17Y29udmVyc2F0aW9uc31cbiAgICAgICAgY3VycmVudENvbnZlcnNhdGlvbklkPXtjdXJyZW50Q29udmVyc2F0aW9uSWR9XG4gICAgICAgIHNwbGl0VXNlck5hbWU9e3NwbGl0VXNlck5hbWV9XG4gICAgICAgIHVzZXJOYW1lPXt1c2VyTmFtZSB8fCBcIlwifVxuICAgICAgICBlbWFpbD17ZW1haWwgfHwgXCJcIn1cbiAgICAgICAgb25Db252ZXJzYXRpb25DbGljaz17aGFuZGxlQ29udmVyc2F0aW9uQ2xpY2t9XG4gICAgICAgIG9uRGVsZXRlQ29udm89e2RlbGV0ZUNvbnZlcnNhdGlvbn1cbiAgICAgICAgb25DaGFuZ2VDb252b1RpdGxlPXtoYW5kbGVTdWJtaXRUaXRsZX1cbiAgICAgICAgaGFuZGxlVGl0bGVDbGljaz17aGFuZGxlVGl0bGVDbGlja31cbiAgICAgICAgZWRpdFRpdGxlSWQ9e2VkaXRUaXRsZUlkfVxuICAgICAgICBlZGl0ZWRUaXRsZT17ZWRpdGVkVGl0bGV9XG4gICAgICAgIGhhbmRsZVRpdGxlQ2hhbmdlPXtoYW5kbGVUaXRsZUNoYW5nZX1cbiAgICAgICAgZWRpdGluZ1RpdGxlPXtlZGl0aW5nVGl0bGV9XG4gICAgICAgIHRpdGxlVXBkYXRlZD17dGl0bGVVcGRhdGVkfVxuICAgICAgICBjaGF0Q29udGFpbmVyUmVmPXtjaGF0Q29udGFpbmVyUmVmIGFzIGFueX1cbiAgICAgICAgaGFuZGxlTW9iaWxlQ2hhdEJ0bkNsaWNrPXtoYW5kbGVNb2JpbGVDaGF0QnRuQ2xpY2t9XG4gICAgICAvPlxuXG4gICAgICB7LyogQ2hhdCBDb250YWluZXIgQ29tcG9uZXQgICovfVxuXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj17Y2hhdERhc2hCb2FyZFJlZn1cbiAgICAgICAgY2xhc3NOYW1lPVwiY2hhdERhc2hib2FyZFdyYXBwZXIgdy1mdWxsIHRleHQtbGVmdFwiXG4gICAgICA+XG4gICAgIFxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgY2hhdERhc2hCb2FyZENvbnRhaW5lciBgfT5cbiAgICAgICAgICB7LyogRGFzaGJvYXJkIENvbXBvbmVudCAgKi99XG5cbiAgICAgICBcblxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZVJvdXRlciIsIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTZXNzaW9uIiwiaXNDbGllbnQiLCJ1c2VTZXNzaW9uU3RvcmFnZSIsImNoZWNrU2Vzc2lvbiIsInVzZUNoYXRDb252ZXJzYXRpb24iLCJ1c2VDcmVhdGVDb252ZXJzYXRpb24iLCJ1c2VDb252ZXJzYXRpb25zIiwiQ2hhdENvbnRhaW5lciIsIlByb2ZpbGUiLCJyb3V0ZXIiLCJmb3JtUmVmIiwic2Vzc2lvblN0YXR1cyIsInNldFNlc3Npb25TdGF0dXMiLCJ1c2VySWQiLCJzZXRVc2VySWQiLCJzaG93R3VpZGVsaW5lcyIsInNldFNob3dHdWlkZWxpbmVzIiwidXNlck5hbWUiLCJzZXRVc2VyTmFtZSIsInNwbGl0VXNlck5hbWUiLCJlbWFpbCIsInNldEVtYWlsIiwic2V0U3BsaXRVc2VyTmFtZSIsInJlc3BvbnNlcyIsInNldFJlc3BvbnNlcyIsIm1lc3NhZ2UiLCJzZXRNZXNzYWdlIiwibG9jYWxTdG9yYWdlQ29udm9JZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRDdXJyZW50Q29udmVyc2F0aW9uSWQiLCJkYXRhIiwic2Vzc2lvbiIsInN0YXR1cyIsIm1lc3NhZ2VzSXNMb2FkaW5nIiwic2V0TWVzc2FnZXNJc0xvYWRpbmciLCJpc1JlcG9uc2VMb2FkaW5nIiwic2V0UmVzcG9uc2VMb2FkaW5nIiwiY3VycmVudENvbnZlcnNhdGlvbklkIiwiY29udmVyc2F0aW9ucyIsImlzTG9hZGluZyIsInNldENvbnZlcnNhdGlvbnMiLCJjcmVhdGVDb252ZXJzYXRpb24iLCJuZXdUaXRsZSIsInNldE5ld1RpdGxlIiwiaXNDcmVhdGVMb2FkaW5nIiwiZXJyb3IiLCJjaGF0Q29udGFpbmVyUmVmIiwiaXNBdFplcm8iLCJzZXRJc0F0WmVybyIsImhhbmRsZU1vYmlsZUNoYXRCdG5DbGljayIsImN1cnJlbnQiLCJzdHlsZSIsInRyYW5zZm9ybSIsImhhbmRsZVJlc2l6ZSIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNlc3Npb25TdG9yYWdlIiwic2V0SXRlbSIsImVkaXRUaXRsZUlkIiwic2V0RWRpdFRpdGxlSWQiLCJlZGl0ZWRUaXRsZSIsInNldEVkaXRlZFRpdGxlIiwiZWRpdGluZ1RpdGxlIiwic2V0RWRpdGluZ1RpdGxlIiwidGl0bGVVcGRhdGVkIiwic2V0VGl0bGVVcGRhdGVkIiwiaGFuZGxlVGl0bGVDbGljayIsImNvbnZvSWQiLCJjb252ZXJzYXRpb24iLCJmaW5kIiwiY29udm8iLCJjb252ZXJzYXRpb25JZCIsInRpdGxlIiwiaGFuZGxlVGl0bGVDaGFuZ2UiLCJldmVudCIsInRhcmdldCIsInZhbHVlIiwiZ2V0Q29udmVyc2F0aW9uIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJ1cGRhdGVkQ29udmVyc2F0aW9uIiwianNvbiIsInByZXZDb252ZXJzYXRpb25zIiwibWFwIiwidXBkYXRlTG9jYWxTdG9yYWdlIiwiY29uc29sZSIsImRlbGV0ZUNvbnZlcnNhdGlvbiIsImN1cnJlbnRDb252ZXJzYXRpb25zIiwibG9nIiwidXBkYXRlZENvbnZlcnNhdGlvbnMiLCJmaWx0ZXIiLCJKU09OIiwic3RyaW5naWZ5IiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJpZCIsImNvbnZlcmF0b2luSUQiLCJwdXNoIiwiYWxlcnQiLCJjYWNoZWRDb252ZXJzYXRpb25zIiwicGFyc2VkQ29udmVyc2F0aW9ucyIsInBhcnNlIiwiQXJyYXkiLCJpc0FycmF5IiwidXBkYXRlZENhY2hlIiwiZSIsImhhbmRsZVN1Ym1pdFRpdGxlIiwicHJldmVudERlZmF1bHQiLCJ0aXRsZUNoYW5nZSIsImtleSIsImxvY2FsQ29udmVyc2F0aW9uSWQiLCJwcmV2Iiwib3JpZ2luYWxDb252ZXJzYXRpb25zIiwiY2hhdERhc2hCb2FyZFJlZiIsInNlbGVjdGVkRmlsZSIsInNldHNlbGVjdGVkRmlsZSIsImhhbmRsZUNvbnZlcnNhdGlvbkNsaWNrIiwidGFyZ2V0UGF0aCIsInVzZXIiLCJ1bmRlZmluZWQiLCJjbGVhclN0b3JhZ2UiLCJyZW1vdmVJdGVtIiwibWVzc2FnZXNSZWZDb3VudGVyIiwiZmV0Y2hNZXNzYWdlc0ZvckNvbnZlcnNhdGlvbiIsIm1lc3NhZ2VzIiwiZm9ybWF0dGVkTWVzc2FnZXMiLCJtc2ciLCJxdWVzdGlvbiIsInVzZXJDb250ZW50IiwiYm90UmVzcG9uc2UiLCJpbWFnZVVybCIsInAiLCJjaGF0Q29udGFpbmVyU2hvd24iLCJzZXRDaGF0Q29udGFpbmVyU2hvd24iLCJkaXYiLCJjbGFzc05hbWUiLCJvbkNvbnZlcnNhdGlvbkNsaWNrIiwib25EZWxldGVDb252byIsIm9uQ2hhbmdlQ29udm9UaXRsZSIsInJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ai/profile/page.tsx\n"));

/***/ })

});