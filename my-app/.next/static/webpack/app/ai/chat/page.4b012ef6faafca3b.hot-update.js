"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ai/chat/page",{

/***/ "(app-pages-browser)/./src/app/ai/chat/page.tsx":
/*!**********************************!*\
  !*** ./src/app/ai/chat/page.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _utilis_MessageContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utilis/MessageContext */ \"(app-pages-browser)/./src/utilis/MessageContext.jsx\");\n/* harmony import */ var _utilis_isClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utilis/isClient */ \"(app-pages-browser)/./src/utilis/isClient.ts\");\n/* harmony import */ var _hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../hooks/useSessionStorage */ \"(app-pages-browser)/./src/hooks/useSessionStorage.ts\");\n/* harmony import */ var _utilis_CheckSession__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/utilis/CheckSession */ \"(app-pages-browser)/./src/utilis/CheckSession.ts\");\n/* harmony import */ var _components_buttonComponet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/buttonComponet */ \"(app-pages-browser)/./src/app/components/buttonComponet.tsx\");\n/* harmony import */ var _hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../hooks/ConversationContext */ \"(app-pages-browser)/./src/hooks/ConversationContext.tsx\");\n/* harmony import */ var _hooks_createConversation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../hooks/createConversation */ \"(app-pages-browser)/./src/hooks/createConversation.ts\");\n/* harmony import */ var _hooks_useConversations__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../hooks/useConversations */ \"(app-pages-browser)/./src/hooks/useConversations.tsx\");\n/* harmony import */ var _ChatContainer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ChatContainer */ \"(app-pages-browser)/./src/app/ai/chat/ChatContainer.tsx\");\n/* harmony import */ var _ChatMessage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ChatMessage */ \"(app-pages-browser)/./src/app/ai/chat/ChatMessage.tsx\");\n/* harmony import */ var _components_Guidelines__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/Guidelines */ \"(app-pages-browser)/./src/app/ai/chat/components/Guidelines.tsx\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _Dashboard__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Dashboard */ \"(app-pages-browser)/./src/app/ai/chat/Dashboard.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n //Utilis and helper functions\n\n\n\n\n\n\n\n//Chat Container\n\n\n\n\n\nconst ChatDashboard = ()=>{\n    _s();\n    //Introduction Guidelines.\n    const [showGuidelines, setShowGuidelines] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const hasViewedGuidelines = localStorage.getItem(\"hasViewedGuidelines\");\n        if (hasViewedGuidelines) {\n            setShowGuidelines(false);\n        }\n    }, []);\n    const handleGuidelinesComplete = ()=>{\n        localStorage.setItem(\"hasViewedGuidelines\", \"true\");\n        setShowGuidelines(false);\n    };\n    const chatBotUrl = \" http://127.0.0.1:5000/chat\";\n    //First introduction From\n    const { userName, setUserName, splitUserName, email, setEmail, setSplitUserName } = (0,_hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_7__.useSessionStorage)();\n    const [responseLoading, setResponseLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.usePathname)();\n    const { data: session, status } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession)();\n    const [sessionStatus, setSessionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    // Form Ref\n    const formRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [editTitleId, setEditTitleId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [editedTitle, setEditedTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [editingTitle, setEditingTitle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [titleUpdated, setTitleUpdated] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // New state for title updates\n    const [currentConversationId, setCurrentConversationId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [messagesIsLoading, setMessagesIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    // Update session storage whenever userName or splitUserName changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        (0,_utilis_CheckSession__WEBPACK_IMPORTED_MODULE_8__.checkSession)(status, {\n            setUserId,\n            setUserName,\n            setSessionStatus,\n            setEmail,\n            setSplitUserName,\n            isClient: _utilis_isClient__WEBPACK_IMPORTED_MODULE_6__.isClient,\n            session,\n            router,\n            email,\n            userName: \"\",\n            splitUserName\n        });\n    }, [\n        status\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (session && session.user && session.user.id) {\n            // console.log(\"Current user ID:\", session.user.id);\n            setUserId(session.user.id);\n        } else {\n            console.log(\"No user ID available in session\");\n        }\n    }, [\n        session\n    ]);\n    //Stores the Chat\n    const { responses, setResponses, message, setMessage, isFetchLoading, setIsFetchLoading } = (0,_hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_10__.useChatConversation)();\n    const { conversations, isLoading, setConversations } = (0,_hooks_useConversations__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(session);\n    const { createConversation, newTitle, setNewTitle, isCreateLoading, error, dataId } = (0,_hooks_createConversation__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(session, setConversations, setCurrentConversationId);\n    //This function shifts and shows the mobile Chat ccontainer\n    const chatContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [isAtZero, setIsAtZero] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false); // State to track the position\n    const handleMobileChatBtnClick = ()=>{\n        console.log(\"Logging the chat container Ref current state\", chatContainerRef.current);\n        if (chatContainerRef.current) {\n            if (isAtZero) {\n                chatContainerRef.current.style.transform = \"translateX(-100%)\";\n            } else {\n                chatContainerRef.current.style.transform = \"translateX(0px)\";\n            }\n            setIsAtZero(!isAtZero); // Toggle the state\n        }\n    };\n    // Effect to handle viewport resize\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const handleResize = ()=>{\n            if (window.innerWidth >= 950 && chatContainerRef.current) {\n                chatContainerRef.current.style.transform = \"translateX(0px)\";\n                setIsAtZero(false); // Reset the state\n            } else if (chatContainerRef.current) {\n                chatContainerRef.current.style.transform = \"translateX(-100%)\";\n                setIsAtZero(true); // Reset the state\n            }\n        };\n        window.addEventListener(\"resize\", handleResize);\n        // Cleanup event listener on component unmount\n        return ()=>{\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n    // Clear the conversation ID on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        //Removed the border Classes From LocalStorage\n        localStorage.removeItem(\"borderClasses\");\n        localStorage.removeItem(\"currentQuestion\");\n        // console.log(\"clearing the current conversation ID\");\n        setResponses([]);\n        setCurrentConversationId(null);\n    }, []);\n    // Update session storage whenever userName or splitUserName changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if ((0,_utilis_isClient__WEBPACK_IMPORTED_MODULE_6__.isClient)()) {\n            sessionStorage.removeItem(\"greetingSent\");\n            sessionStorage.removeItem(\"currentConvoId\");\n            if (userName !== null) {\n                sessionStorage.setItem(\"userName\", userName);\n            }\n            if (splitUserName !== \"\") {\n                sessionStorage.setItem(\"splitUserName\", splitUserName);\n            }\n            if (email !== null) {\n                sessionStorage.setItem(\"email\", email);\n            }\n        }\n    }, [\n        userName,\n        splitUserName\n    ]);\n    // Update session storage whenever userName or splitUserName changes\n    const sessionRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n    // console.log(\n    //   \"useEffect: Checking to see if the session ref changed\",\n    //   sessionRef.current\n    // );\n    }, [\n        sessionRef\n    ]);\n    //Submit the Inquiry\n    const chatDashBoardRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    // Check for special commands\n    const specialCommands = {\n        \"br\": \"/br\",\n        \"down\": \"/down\",\n        \"help\": \"/help\",\n        \"listbr\": \"/listbr\",\n        \"new\": \"/new\",\n        \"pdf\": \"/pdf\",\n        \"rem\": \"/rem\",\n        \"save\": \"/save\",\n        \"see\": \"/see\",\n        \"size\": \"/size\",\n        \"support\": \"/support\",\n        \"up\": \"/up\",\n        \"usage\": \"/usage\",\n        \"v\": \"/v\",\n        \"vec\": \"/vectorimage\",\n        \"ycai\": \"/ycai\"\n    };\n    const [pdfImages, setPdfImages] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [selectedPdfImage, setSelectedPdfImage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (!message.trim()) {\n            console.log(\"Empty message, returning\");\n            return;\n        }\n        setMessagesIsLoading(true);\n        console.log(\"Messages is loading\", messagesIsLoading);\n        const command = message.trim().split(\" \")[0].toLowerCase().replace(\"/\", \"\");\n        console.log(\"Command\", command);\n        if (command === \"$listbr\") {\n            setResponses((prevResponses)=>[\n                    ...prevResponses,\n                    {\n                        question: message,\n                        response: \"Here are your PDF images:\",\n                        imageUrl: pdfImages,\n                        id: Date.now().toString()\n                    }\n                ]);\n            setMessage(\"\"); // Clear the message input\n            return; // Exit the function after ha\n        }\n        // New functionality to handlendle $br <num>\n        if (command.startsWith(\"$br\")) {}\n        if (command === \"$br\") {\n            const index = parseInt(message.split(\" \")[1], 10); // Get the number after $br\n            if (!isNaN(index) && index >= 0 && index < pdfImages.length) {\n                console.log(\"Selected PDF image\", index, \"Path:\", pdfImages[index]);\n                // Log the path to the selected PDF image\n                setSelectedPdfImage(pdfImages[index]); // Set the selected PDF image by index\n            } else {\n                console.log(\"Invalid index for PDF selection\");\n            }\n            return;\n        }\n        if (command === \"$pdf\") {\n            uploadImage(selectedPdfImage);\n            return;\n        }\n        async function uploadImage(imagePath) {\n            // Fetch the image as a Blob\n            const response = await fetch(imagePath);\n            const blob = await response.blob(); // Convert the response to a Blob\n            const file = new File([\n                blob\n            ], \"image.png\", {\n                type: blob.type\n            }); // Create a File object\n            const formData = new FormData();\n            formData.append(\"file\", file); // Change 'files' to 'file'\n            console.log(\"Logging the image file\", file);\n            fetch(\"http://127.0.0.1:5000/upload\", {\n                method: \"POST\",\n                body: formData\n            }).then((response)=>{\n                if (response.ok) {\n                    // Check if the response is a PDF\n                    const contentType = response.headers.get(\"content-type\");\n                    if (contentType && contentType.includes(\"application/pdf\")) {\n                        // Handle PDF download\n                        return response.blob().then((blob)=>{\n                            const url = window.URL.createObjectURL(blob);\n                            const a = document.createElement(\"a\");\n                            a.href = url;\n                            a.download = \"output.pdf\"; // Specify the download name\n                            document.body.appendChild(a);\n                            a.click();\n                            a.remove();\n                        });\n                    } else {\n                        // Handle JSON response\n                        return response.json();\n                    }\n                } else {\n                    throw new Error(\"Network response was not ok.\");\n                }\n            }).then((data)=>{\n                console.log(\"Upload successful:\", data);\n            }).catch((error)=>{\n                console.error(\"Error uploading image:\", error);\n            });\n        }\n        if (command === \"$rem\") {\n            await handleUploadFile(e); // Call handleUploadFile directly\n            console.log(\"Remove command\", message);\n            setMessage(\"\");\n            return;\n        }\n        // Check for the /upscale command\n        if (command === \"upscale\") {\n            await handleUploadFile(e); // Call handleUploadFile directly\n            return; // Exit the function after handling the upscale command\n        }\n        if (command in specialCommands) {\n            // Handle special command\n            await handleSpecialCommand(command, message);\n        } else {\n            // Regular chat flow\n            if ((0,_utilis_isClient__WEBPACK_IMPORTED_MODULE_6__.isClient)()) {\n                if (!currentConversationId) {\n                    console.log(\"Creating new conversation\");\n                    await createConversation().then((convoID)=>{\n                        console.log(\"New conversation created with ID:\", convoID);\n                        setCurrentConversationId(convoID);\n                        sessionStorage.setItem(\"currentConversationId\", convoID);\n                        localStorage.setItem(\"currentConversationId\", convoID);\n                    });\n                }\n                const updatedConversationId = localStorage.getItem(\"currentConversationId\");\n                // 1. Set up the new response without any bot response yet.\n                const newResponse = {\n                    question: message,\n                    response: \"\",\n                    id: \"temp\"\n                };\n                // Use functional update for state\n                setResponses((responses)=>[\n                        ...responses,\n                        newResponse\n                    ]);\n                setMessage(\"\");\n                console.log(\"Chat is still bieng called\", responses);\n                try {\n                    // 2. Fetch bot reply from the API\n                    const botReply = await fetch(chatBotUrl, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-type\": \"application/json\",\n                            \"Origin\": \"http://localhost:3000\" // Adjust if your frontend runs on a different port\n                        },\n                        mode: \"cors\",\n                        body: JSON.stringify({\n                            userId: session === null || session === void 0 ? void 0 : session.user.id,\n                            message,\n                            conversationId: currentConversationId\n                        })\n                    }).then((res)=>res.json());\n                    setResponseLoading(false);\n                    // 3. Update the responses array with the bot's reply\n                    setResponses((prevResponses)=>prevResponses.map((resp)=>{\n                            if (resp.question === message) {\n                                return {\n                                    ...resp,\n                                    response: botReply.response\n                                };\n                            }\n                            return resp;\n                        }));\n                    // console.log(\"Logging the new Responses\", responses);\n                    console.log(\"Logging the bot reply\", botReply);\n                    await fetch(\"/api/messages\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            userId: session === null || session === void 0 ? void 0 : session.user.id,\n                            conversationId: updatedConversationId,\n                            userContent: message,\n                            botResponse: botReply.response,\n                            imageUrl: \"\"\n                        })\n                    });\n                    setMessagesIsLoading(false);\n                //Add the conversations arrawy or update\n                } catch (error) {\n                    console.error(\"Error handling submission:\", error);\n                }\n            }\n        }\n    };\n    const [, setfileURL] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [selectedFile, setselectedFile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [uploadedFile, setuploadedFile] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({});\n    const [isUploading, setisUploading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isFileUploaded, setisFileUploaded] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [uploadProgress, setuploadProgress] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    let uploadInput = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_2___default().createRef();\n    // Update handleDrop to work like handleSelectFile\n    const handleSelectFile = (e)=>{\n        const selectedFileList = [];\n        for(let i = 0; i < e.target.files.length; i++){\n            selectedFileList.push(e.target.files.item(i));\n        }\n        setselectedFile(selectedFileList);\n    };\n    // Upload file to server\n    const handleUploadFile = async (e)=>{\n        e.preventDefault();\n        setisUploading(true);\n        const data = new FormData();\n        console.log(\"THe upload input\", uploadInput.files);\n        // Append the file to the request body\n        for(let i = 0; i < uploadInput.files.length; i++){\n            data.append(\"file\", uploadInput.files[i], uploadInput.files[i].name);\n        }\n        const newResponse = {\n            question: message,\n            response: \"\",\n            id: \"temp\"\n        };\n        setResponses((responses)=>[\n                ...responses,\n                newResponse\n            ]);\n        setMessage(\"\");\n        console.log(\"LOggin he data\", data);\n        try {\n            const config = {\n                onUploadProgress: (progressEvent)=>{\n                    const { loaded, total } = progressEvent;\n                    setuploadProgress(Math.round(loaded / total * 100));\n                }\n            };\n            const response = await axios__WEBPACK_IMPORTED_MODULE_17__[\"default\"].post(\"http://127.0.0.1:5000/process_image\", data, config);\n            const body = response.data;\n            console.log(\"Logging the response\", response.data);\n            setResponses((prevResponses)=>prevResponses.map((resp)=>{\n                    if (resp.question === message) {\n                        // Set imageUrl directly instead of an array\n                        const newImageUrl = response.data.image_url.startsWith(\"http\") ? response.data.image_url // Use the existing URL if it already has the protocol\n                         : \"http://127.0.0.1:5000\".concat(response.data.image_url); // Prepend the base URL if not\n                        return {\n                            ...resp,\n                            imageUrl: newImageUrl\n                        };\n                    }\n                    return resp;\n                }));\n            console.log(\"Logging the responses\", responses);\n            const updatedConversationId = sessionStorage.getItem(\"currentConversationId\");\n            console.log(\"Logging the response data\", response.data.responses);\n            await fetch(\"/api/messages\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userId: session === null || session === void 0 ? void 0 : session.user.id,\n                    conversationId: updatedConversationId,\n                    userContent: message,\n                    imageUrl: \"http://127.0.0.1:5000\".concat(response.data.image_url)\n                })\n            });\n            console.log(\"Returning the body\", body);\n            setfileURL(\"\".concat(chatBotUrl, \"/\").concat(body.filename));\n            if (response.status === 200) {\n                setisFileUploaded(true); // flag to show the uploaded file\n                setisUploading(false);\n                setuploadedFile(selectedFile); // set the uploaded file to show the name\n            }\n        } catch (error) {\n            console.error(error);\n            setisUploading(false);\n        }\n    };\n    const handleSpecialCommand = async (command, fullMessage)=>{\n        const baseUrl = \"http://127.0.0.1:5000\"; // Adjust this to your API base URL\n        const commandEndpoint = \"\".concat(baseUrl).concat(specialCommands[command]);\n        console.log(\"Command Endpoint:\", commandEndpoint);\n        window.alert(commandEndpoint);\n        return;\n        try {\n            const response = await fetch(commandEndpoint, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userId: session === null || session === void 0 ? void 0 : session.user.id,\n                    message: fullMessage,\n                    conversationId: currentConversationId\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            const data = await response.json();\n            console.log(\"Command \".concat(command, \" response:\"), data);\n            // Update UI with command response\n            setResponses((prevResponses)=>[\n                    ...prevResponses,\n                    {\n                        question: fullMessage,\n                        response: data.response,\n                        id: Date.now().toString()\n                    }\n                ]);\n        } catch (error) {\n            console.error(\"Error executing command \".concat(command, \":\"), error);\n            // Update UI with error message\n            setResponses((prevResponses)=>[\n                    ...prevResponses,\n                    {\n                        question: fullMessage,\n                        response: \"Error executing command: \".concat(error instanceof Error ? error.message : \"Unknown error\"),\n                        id: Date.now().toString()\n                    }\n                ]);\n        } finally{\n            setMessagesIsLoading(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        messagesIsLoading\n    ]);\n    // Where we are going to send the Chat Data Request\n    function updateLocalStorage(updatedConversation, conversationId) {\n        if ((0,_utilis_isClient__WEBPACK_IMPORTED_MODULE_6__.isClient)()) {\n            const cachedConversations = sessionStorage.getItem(\"conversations\");\n            if (cachedConversations) {\n                try {\n                    // Parse the cached conversations\n                    const parsedConversations = JSON.parse(cachedConversations);\n                    // Ensure that parsedConversations is an array\n                    if (Array.isArray(parsedConversations)) {\n                        const updatedCache = parsedConversations.map((convo)=>convo.conversationId === conversationId ? {\n                                ...convo,\n                                title: updatedConversation.title\n                            } : convo);\n                        sessionStorage.setItem(\"conversations\", JSON.stringify(updatedCache));\n                    // console.log(\"Logging the updated Cache\", updatedCache);\n                    } else {\n                        console.error(\"Parsed cached conversations is not an array\");\n                    }\n                } catch (e) {\n                    console.error(\"Error parsing cached conversations:\", e);\n                }\n            }\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, []);\n    async function getConversation(conversationId) {\n        // console.log(\n        //   \"Logging the converatation ID in the getConversation\",\n        //   conversationId\n        // );\n        try {\n            const response = await fetch(\"/api/\".concat(conversationId));\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch conversation\");\n            }\n            const updatedConversation = await response.json();\n            console.log(\"Logging the converations before errorw\", updatedConversation);\n            // Update local state\n            setConversations((prevConversations)=>{\n                return prevConversations.map((convo)=>convo === conversationId ? {\n                        ...convo,\n                        title: updatedConversation.title\n                    } : convo);\n            });\n            updateLocalStorage(updatedConversation, conversationId);\n        } catch (error) {\n            console.error(\"Error fetching conversation:\", error);\n            throw error; // Re-throw to handle it in the UI layeclearr\n        }\n    }\n    const handleSubmitTitle = async (event)=>{\n        event.preventDefault(); // Prevent form submission\n        let titleChange = \"\";\n        return;\n        console.log(\"Event Key\", event.key);\n        if (event.key === \"Enter\") {\n            event.preventDefault(); // Prevent form submission\n            const newTitle = editedTitle; // Capture the title at the time of submission\n            titleChange = editTitleId !== null && editTitleId !== void 0 ? editTitleId : \"\";\n            // console.log(\"New title to be set:\", newTitle);\n            // console.log(\"New title Id being logged\", editTitleId);\n            if (editTitleId !== null && editTitleId !== \"\") {\n                const updatedConversations = conversations.map((convo)=>convo.conversationId === editTitleId ? {\n                        ...convo,\n                        title: newTitle\n                    } : convo);\n                setConversations(updatedConversations);\n                // console.log(\"Updated conversations:\", updatedConversations);\n                sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n                setEditTitleId(null); // Exit edit mode\n                setEditedTitle(\"\"); // Clear the edited title state\n                setEditingTitle(false);\n            }\n        }\n        const localConversationId = localStorage.getItem(\"currentConversationId\");\n        console.log(\"Local Conversation ID\", localConversationId);\n        try {\n            const response = await fetch(\"/api/submitTitle/\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    title: editedTitle,\n                    id: localConversationId\n                })\n            });\n            // console.log(\"Are you sending the new Title\", editedTitle);\n            if (response.ok) {\n                await getConversation(editTitleId);\n                setEditingTitle(false);\n                setTitleUpdated((prev)=>!prev); // Toggle the titleUpdated state\n            }\n            if (!response.ok) {\n                throw new Error(\"Failed to update title\");\n            }\n        } catch (error) {\n            console.error(\"Error updating title:\", error);\n            // If the update fails, revert the change in the UI and alert the user\n            const originalConversations = conversations.map((convo)=>convo.conversationId === editTitleId ? {\n                    ...convo,\n                    title: convo.title\n                } : convo);\n            setConversations(originalConversations);\n            sessionStorage.setItem(\"conversations\", JSON.stringify(originalConversations));\n            alert(\"Failed to update title, please try again.\"); // Inform the user\n        }\n    };\n    //Gets the key down change\n    const handleKeyDown = (event)=>{\n        if (event.key === \"Enter\") {\n            handleSubmitTitle(event); // Cast to any to satisfy FormEvent type\n        }\n    };\n    //Editing the ability to change the existing title.\n    const handleTitleClick = (convoId)=>{\n        const conversation = conversations.find((convo)=>convo.conversationId === convoId);\n        if (conversation) {\n            setEditTitleId(conversation.conversationId);\n            setEditedTitle(conversation.title);\n            setEditingTitle(true);\n        } else {}\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        editTitleId,\n        editedTitle\n    ]);\n    const handleTitleChange = (event)=>{\n        setEditedTitle(event.target.value);\n    };\n    // Logging the responses temp\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{}, [\n        responses\n    ]);\n    // sessionStorage.clear();\n    const handleConversationClick = (convoId)=>{\n        // console.log(\"Activating conversation with ID:\", convoId);\n        localStorage.setItem(\"currentConversationId\", convoId);\n        sessionStorage.setItem(\"currentConversationId\", convoId);\n        console.log(\"Logging the convoId\", convoId);\n        const targetPath = \"/ai/chat/\".concat(session === null || session === void 0 ? void 0 : session.user.id, \"/\").concat(convoId);\n        console.log(\"Logging the target path\", targetPath);\n        router.push(targetPath, undefined);\n        setCurrentConversationId(convoId);\n    };\n    //Lets clear the chat Responses when we first load in\n    // Function to remove the first index of chatResponses\n    const removeFirstChatResponse = ()=>{\n        if ((0,_utilis_isClient__WEBPACK_IMPORTED_MODULE_6__.isClient)()) {\n            const chatResponses = JSON.parse(sessionStorage.getItem(\"chatResponses\") || \"[]\");\n            if (chatResponses.length > 0) {\n                chatResponses.shift(); // Remove the first element\n                sessionStorage.setItem(\"chatResponses\", JSON.stringify(chatResponses));\n                console.log(\"First chat response removed\");\n            } else {\n            // console.log(\"No chat responses to remove\");\n            }\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        removeFirstChatResponse();\n    }, [\n        pathname\n    ]);\n    //This function Deletes the cvonersation\n    async function deleteConversation(conversationId) {\n        if ((0,_utilis_isClient__WEBPACK_IMPORTED_MODULE_6__.isClient)()) {\n            const currentConversations = conversations;\n            // Optimistically remove the conversation from UI\n            const updatedConversations = currentConversations.filter((convo)=>convo.conversationId !== conversationId);\n            setConversations(updatedConversations);\n            sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n            try {\n                const response = await fetch(\"/api/deleteConversations/\", {\n                    method: \"DELETE\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        id: conversationId\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to delete the conversation\");\n                }\n                // Filter out the deleted conversation\n                const updatedConversations = conversations.filter((convo)=>convo.converatoinID !== conversationId);\n                // console.log(\"Logging out the Conversation Filter\", conversations);\n                // Update state and local storage\n                setConversations(updatedConversations); // Update React state\n                sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations)); // Update local storage\n                console.log(\"Local storage after deletion:\", sessionStorage.getItem(\"conversations\"));\n                if (response.ok) {\n                    // Update the conversations state\n                    const updatedConversations = conversations.filter((convo)=>convo.conversationId !== conversationId);\n                    setConversations(updatedConversations);\n                    // Update the session storage\n                    sessionStorage.setItem(\"conversations\", JSON.stringify(updatedConversations));\n                    router.push(\"/ai/chat\");\n                }\n            } catch (error) {\n                console.error(\"Error deleting conversation:\", error.message);\n                alert(\"Could not delete the conversation. Please try again.\");\n            }\n        }\n    }\n    //Send an automated Message on load\n    const handleCardClick = (text)=>{\n        setMessage(text);\n    };\n    const handleButtonClick = (event)=>{\n        var _cardElement_querySelector;\n        const buttonElement = event.target;\n        const cardElement = buttonElement.closest(\"div\");\n        const text = (cardElement === null || cardElement === void 0 ? void 0 : (_cardElement_querySelector = cardElement.querySelector(\"p\")) === null || _cardElement_querySelector === void 0 ? void 0 : _cardElement_querySelector.textContent) || \"\";\n        handleCardClick(text);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n    // console.log(\"Current message:\", message);\n    }, [\n        message\n    ]);\n    //Get access to the current conversation Name and Id\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n    // console.log(\"Loggin the conversations in the app useEffect\", conversations);\n    }, [\n        conversations\n    ]);\n    //This handles the closing of the chat function\n    const [chatContainerShown, setChatContainerShown] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const chatContainerToggle = ()=>{\n        // console.log(\"IS this being clicked??? Showon yes or no\");\n        setChatContainerShown(!chatContainerShown);\n    };\n    // const { loading } = useSessionGate();\n    // if (loading) {\n    //   return (\n    //     <div className=\"h-[100vh] w-full flex items-center justify-center\">\n    //         {/* <LoadingComponent /> */}\n    //     </div>\n    //   );\n    // }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_utilis_MessageContext__WEBPACK_IMPORTED_MODULE_5__.MessageProvider, {\n        children: [\n            showGuidelines && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Guidelines__WEBPACK_IMPORTED_MODULE_15__.Guidelines, {\n                onComplete: handleGuidelinesComplete\n            }, void 0, false, {\n                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                lineNumber: 954,\n                columnNumber: 26\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"chatDashboard text-white\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChatContainer__WEBPACK_IMPORTED_MODULE_13__.ChatContainer, {\n                        setConversations: setConversations,\n                        conversations: conversations,\n                        currentConversationId: currentConversationId,\n                        splitUserName: splitUserName,\n                        userName: userName || \"\",\n                        email: email || \"\",\n                        onConversationClick: handleConversationClick,\n                        onDeleteConvo: (convoId)=>deleteConversation(convoId.toString()),\n                        onChangeConvoTitle: handleSubmitTitle,\n                        handleTitleClick: handleTitleClick,\n                        editTitleId: editTitleId,\n                        editedTitle: editedTitle,\n                        handleTitleChange: handleTitleChange,\n                        editingTitle: editingTitle,\n                        setEditingTitle: setEditingTitle,\n                        titleUpdated: titleUpdated,\n                        handleKeyDown: handleKeyDown,\n                        chatContainerRef: chatContainerRef,\n                        handleMobileChatBtnClick: handleMobileChatBtnClick,\n                        chatContainerToggle: chatContainerToggle,\n                        chatContainerShown: chatContainerShown\n                    }, void 0, false, {\n                        fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                        lineNumber: 959,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: chatDashBoardRef,\n                        className: \"chatDashboardWrapper w-full text-left\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"chatDashBoardContainer\",\n                            children: [\n                                currentConversationId ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChatMessage__WEBPACK_IMPORTED_MODULE_14__.ChatMessagesContainer, {\n                                    responses: responses || \"null\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                    lineNumber: 994,\n                                    columnNumber: 15\n                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Dashboard__WEBPACK_IMPORTED_MODULE_16__.Dashboard, {\n                                    userName: userName || \"\",\n                                    handleButtonClick: handleButtonClick,\n                                    formRef: formRef,\n                                    isResponseLoading: messagesIsLoading || false,\n                                    handleSubmit: handleSubmit,\n                                    setMessage: setMessage,\n                                    message: message\n                                }, void 0, false, {\n                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                    lineNumber: 996,\n                                    columnNumber: 15\n                                }, undefined),\n                                currentConversationId ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                    ref: formRef,\n                                    onSubmit: handleSubmit,\n                                    className: \"chatFormSubmit\",\n                                    onDragOver: (e)=>e.preventDefault(),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"relative textAreaContainer\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                                    onChange: (e)=>{\n                                                        setMessage(e.target.value);\n                                                    },\n                                                    onKeyDown: (e)=>{\n                                                        if (e.key === \"Enter\" && !e.shiftKey) {\n                                                            var _formRef_current;\n                                                            e.preventDefault();\n                                                            (_formRef_current = formRef.current) === null || _formRef_current === void 0 ? void 0 : _formRef_current.requestSubmit();\n                                                        }\n                                                    },\n                                                    value: message,\n                                                    placeholder: \"Ask Thou Question...\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                    lineNumber: 1019,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"textAreaIconWrapper flex flex-row gap-[11px]\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            type: \"file\",\n                                                            id: \"fileInput\",\n                                                            accept: \"image/*\",\n                                                            style: {\n                                                                display: \"none\"\n                                                            },\n                                                            onChange: handleSelectFile,\n                                                            ref: (ref)=>{\n                                                                uploadInput = ref;\n                                                            }\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                            lineNumber: 1034,\n                                                            columnNumber: 19\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                            className: \"textAreaIcon\",\n                                                            onClick: ()=>{\n                                                                var _document_getElementById;\n                                                                return (_document_getElementById = document.getElementById(\"fileInput\")) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.click();\n                                                            },\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                                xmlns: \"http://www.w3.org/2000/svg\",\n                                                                width: \"18\",\n                                                                height: \"18\",\n                                                                fill: \"none\",\n                                                                viewBox: \"0 0 24 24\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                    fill: \"currentColor\",\n                                                                    \"fill-rule\": \"evenodd\",\n                                                                    d: \"M9 7a5 5 0 0 1 10 0v8a7 7 0 1 1-14 0V9a1 1 0 0 1 2 0v6a5 5 0 0 0 10 0V7a3 3 0 1 0-6 0v8a1 1 0 1 0 2 0V9a1 1 0 1 1 2 0v6a3 3 0 1 1-6 0z\",\n                                                                    \"clip-rule\": \"evenodd\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                                    lineNumber: 1051,\n                                                                    columnNumber: 23\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                                lineNumber: 1044,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                            lineNumber: 1043,\n                                                            columnNumber: 19\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                            type: \"submit\",\n                                                            className: \"textAreaIcon\",\n                                                            children: messagesIsLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_buttonComponet__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                                                                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                                lineNumber: 1061,\n                                                                columnNumber: 41\n                                                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                                xmlns: \"http://www.w3.org/2000/svg\",\n                                                                width: \"18\",\n                                                                height: \"18\",\n                                                                fill: \"none\",\n                                                                viewBox: \"0 0 32 32\",\n                                                                className: \"\",\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                    fill: \"currentColor\",\n                                                                    \"fill-rule\": \"evenodd\",\n                                                                    d: \"M15.192 8.906a1.143 1.143 0 0 1 1.616 0l5.143 5.143a1.143 1.143 0 0 1-1.616 1.616l-3.192-3.192v9.813a1.143 1.143 0 0 1-2.286 0v-9.813l-3.192 3.192a1.143 1.143 0 1 1-1.616-1.616z\",\n                                                                    \"clip-rule\": \"evenodd\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                                    lineNumber: 1070,\n                                                                    columnNumber: 23\n                                                                }, undefined)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                                lineNumber: 1062,\n                                                                columnNumber: 21\n                                                            }, undefined)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                            lineNumber: 1060,\n                                                            columnNumber: 19\n                                                        }, undefined)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                                    lineNumber: 1033,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                            lineNumber: 1018,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        selectedFile && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mt-2\",\n                                            children: [\n                                                \"Selected file: \",\n                                                selectedFile.name\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                            lineNumber: 1081,\n                                            columnNumber: 32\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                                    lineNumber: 1011,\n                                    columnNumber: 13\n                                }, undefined) : null\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                            lineNumber: 991,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                        lineNumber: 985,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n                lineNumber: 956,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/sydneysanders/Desktop/CodeProjects/HustuleCode/HustleCode/my-app/src/app/ai/chat/page.tsx\",\n        lineNumber: 953,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ChatDashboard, \"VWLC9BtjBQOxcdYi0NrH0A9vhtc=\", false, function() {\n    return [\n        _hooks_useSessionStorage__WEBPACK_IMPORTED_MODULE_7__.useSessionStorage,\n        next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_1__.usePathname,\n        next_auth_react__WEBPACK_IMPORTED_MODULE_3__.useSession,\n        _hooks_ConversationContext__WEBPACK_IMPORTED_MODULE_10__.useChatConversation,\n        _hooks_useConversations__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n        _hooks_createConversation__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\n    ];\n});\n_c = ChatDashboard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (_c2 = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_c1 = ()=>Promise.resolve(ChatDashboard), {\n    ssr: false\n}));\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ChatDashboard\");\n$RefreshReg$(_c1, \"%default%$dynamic\");\n$RefreshReg$(_c2, \"%default%\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ai/chat/page.tsx\n"));

/***/ })

});